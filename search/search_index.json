{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Getting Started \u00b6 This is the Spotware Open API documentation, here you can find everything you need for working with Open API. What's Open API? \u00b6 Open API is part of cTrader package which is available for all cTrader brokers, it allows third party developers to develop Apps or services for cTrader users and integrate cTrader on their platforms. It uses Google Protocol Buffers for sending and receiving messages, it allows you to use any programming language you are familiar with to interact with the API. Version 2.0 \u00b6 The Open API 2.0 is the new version of the publicly available Protobuf-based API developed by Spotware. It allows third-party service providers to integrate additional tools and applications for trading and analysis with the data and functionality from Spotware platform by getting all the required cTID data, market data and performing all possible trading operations on behalf of other cTrader users. Unlike the Open API version 1.0, which was using a different protocol for each scope (REST and Protocol Buffers), the Open API 2.0 is designed to use solely protocol buffers. Now by using Protocol Buffers you can retrieve accounts information, market data, and trading data. The API is open for everyone with no restrictions ( Terms of Use ) and it is supported by all trading accounts of any cTrader supported brokers. Environments \u00b6 Open API is available in both Demo and Live environments. We recommend using Demo accounts first and then switch to Live, after you make sure your integration works correctly. But you can use the Live version right away as well on your own risk.","title":"Getting Started"},{"location":"#getting-started","text":"This is the Spotware Open API documentation, here you can find everything you need for working with Open API.","title":"Getting Started"},{"location":"#whats-open-api","text":"Open API is part of cTrader package which is available for all cTrader brokers, it allows third party developers to develop Apps or services for cTrader users and integrate cTrader on their platforms. It uses Google Protocol Buffers for sending and receiving messages, it allows you to use any programming language you are familiar with to interact with the API.","title":"What's Open API?"},{"location":"#version-20","text":"The Open API 2.0 is the new version of the publicly available Protobuf-based API developed by Spotware. It allows third-party service providers to integrate additional tools and applications for trading and analysis with the data and functionality from Spotware platform by getting all the required cTID data, market data and performing all possible trading operations on behalf of other cTrader users. Unlike the Open API version 1.0, which was using a different protocol for each scope (REST and Protocol Buffers), the Open API 2.0 is designed to use solely protocol buffers. Now by using Protocol Buffers you can retrieve accounts information, market data, and trading data. The API is open for everyone with no restrictions ( Terms of Use ) and it is supported by all trading accounts of any cTrader supported brokers.","title":"Version 2.0"},{"location":"#environments","text":"Open API is available in both Demo and Live environments. We recommend using Demo accounts first and then switch to Live, after you make sure your integration works correctly. But you can use the Live version right away as well on your own risk.","title":"Environments"},{"location":"account-authentication/","text":"Account Authentication \u00b6 Spotware Open API authentication process is designed based on OAuth 2.0. The OAuth 2.0 authorization framework allows the third-party applications obtaining limited access to the service, either on behalf of a resource owner by orchestrating an approval interaction between the resource owner and the service, or by allowing the third-party application to obtain access on its own behalf. The communication with the resource (e.g. trading account) owner looks as follows: A trading account owner decides to start using your service by clicking some action button on your site. The service generates a request to the Open API 2.0, redirecting the trader to the Spotware side. Trader logs in using his personal cTrader profile and allows permissions. After that, the trader is redirected back to the service side with an authentication code which can be exchanged with an access token. The access token allows the service to perform operations with the trading account on behalf of the trader. Playground \u00b6 To experiment with the API authorization process you can use the playground option of your API application. For accessing playground go to your Open API applications page, click on an application playground button: Playground allows you to easily get an access token for one of your Open API applications, once you are in your application playground page click on \"Get Token\" button: It will send you to the account authentication page for your own logged in cTrader ID, select some of your connected trading accounts for authorization and click on the \"Allow Access\" button. You will be redirected back to playground page but this time it will show you the access token data: You can use that access token for sending/receiving messages to the API. Authorization \u00b6 In order to obtain access to a trading account\u2019s information and trade on its behalf, you should have an authentication token for each cTrader ID that uses your application. cTrader gives each user a cID, and all of the trading accounts of that user from all brokers will be linked to that cID, and Open API uses cID to give you access to some or all of a user linked trading accounts based on the user given permission. First you must have an active Open API application, your API application status on your applications page must be \"Active\", then add a redirect URL to your API application, the API will redirect the user to this URL after account authorization and it will pass the access code as a URL parameter. Adding Redirect URI \u00b6 Open your applications page, and click on your application \"Edit\" button: In your application edit page, scroll down and find the \"Redirect URIs\" section: As you can see your application can have as many redirect URI as it needs, and you can add a new one by clicking on the \"Add Redirect URI\" button. The first redirect URI is for the playground, you can't remove or change it, and you must not use it on your products. Once you add the \"Redirect URIs\" click on \"Save\" and that's it. Getting Authorization Code \u00b6 Now you are ready to get an authentication code from a cTrader user, URI: https://connect.spotware.com/apps/auth?client_id={your_app_client_id}&redirect_uri={redirect_uri}&scope=accounts Example: https://connect.spotware.com/apps/auth?client_id=7_5az7pj935owsss8kgokcco84wc8osk0g0gksow0ow4s4ocwwgc&redirect_uri=http%3A%2F%2Fwww.spotware.com%2F&scope=accounts You have to replace the \"your_app_client_id\" with your Open API application client ID and \"redirect_uri\" with one of your application redirect URIs. After you fill the authentication URI with your app credentials, open it and you will see the cTrader ID login page. Login to a cTrader ID with some trading account, after logging in you will see the cTrader ID trading accounts list, with a check box for authorizing access to that trading account. Click on \"Allow Access\" button, you will be redirected to your application redirect URI and the Authorization Code will be appended as a parameter to the redirect URI: https://my-redirect-uri.com/?code={authorization_code-code-will-be-here} Get the authorization code from redirect URI and generate an access token from it. The authorization code has a one minute expiry time, you must exchange it with an access token as soon as possible otherwise it will be invalidated. Getting Access Token \u00b6 To exchange an authorization code with an access token you have to send the authorization code to this URI: https://connect.spotware.com/apps/token?grant_type=authorization_code&code={authorization_code}&redirect_uri={redirect_uri}&client_id={your_app_client_id}&client_secret={your_app_client_secret} Example: https://connect.spotware.com/apps/token?grant_type=authorization_code&code={authorization_code}&redirect_uri=http%3A%2F%2Fwww.spotware.com%2F&client_id=7_5az7pj935owsss8kgokcco84wc8osk0g0gksow0ow4s4ocwwgc&client_secret=49p1ynqfy7c4sw84gwoogwwsk8cocg8ow8gc8o80c0ws448cs4 It will return back an access token in JSON, the response will have this properties: * accessToken * refreshToken * expiresIn * tokenType * errorCode * description Example: { \"accessToken\" : \"mos8Bw3D4EG0fRPd4Eqq0JxaFT4zjd8e4YijNezh_ag\" , \"tokenType\" : \"bearer\" , \"expiresIn\" : 2628000 , \"refreshToken\" : \"VCuafFhy81AFZjsWkbuEzdOhhRj5YTWz8fWUwHam7KM\" , \"errorCode\" : null , \"access_token\" : \"mos8Bw3D4EG0fRPd4Eqq0JxaFT4zjd8e4YijNezh_ag\" , \"refresh_token\" : \"VCuafFhy81AFZjsWkbuEzdOhhRj5YTWz8fWUwHam7KM\" , \"expires_in\" : 2628000 } The above token will expire after 2628000 seconds from now, the expiry is in seconds which starts from the time you got the token. Once your token expires you can use the refresh token to get a new access token. Refreshing Access Token \u00b6 The access tokens have expiry time, once a token reaches its expiry you will not be able to use that token anymore, and you have to refresh the expired token. The refresh token never expires and each access token has a refresh token. To refresh your access token you have to send the refresh token to: https://connect.spotware.com/apps/token?grant_type=refresh_token&refresh_token={refresh_token}&client_id={your_app_client_id}&client_secret={your_app_client_secret} It will give you back a new generated token with a new refresh token, now you can use this new token data instead of the old one which is invalidated. Instead of the HTTP request method you can use the ProtoOARefreshTokenReq API message to refresh your expired token via Protocol Buffers and it will return a ProtoOARefreshTokenRes message which will have the new token data. Note If you are not aware of what cTrader ID is, why you need this and how it works, please check the corresponding section below. Because you have to have it to play with OAuth services. If you are not aware of OAuth technology, please check the OAuth standard reference RFC6749: The OAuth 2.0 Authorization Framework.","title":"Account Authentication"},{"location":"account-authentication/#account-authentication","text":"Spotware Open API authentication process is designed based on OAuth 2.0. The OAuth 2.0 authorization framework allows the third-party applications obtaining limited access to the service, either on behalf of a resource owner by orchestrating an approval interaction between the resource owner and the service, or by allowing the third-party application to obtain access on its own behalf. The communication with the resource (e.g. trading account) owner looks as follows: A trading account owner decides to start using your service by clicking some action button on your site. The service generates a request to the Open API 2.0, redirecting the trader to the Spotware side. Trader logs in using his personal cTrader profile and allows permissions. After that, the trader is redirected back to the service side with an authentication code which can be exchanged with an access token. The access token allows the service to perform operations with the trading account on behalf of the trader.","title":"Account Authentication"},{"location":"account-authentication/#playground","text":"To experiment with the API authorization process you can use the playground option of your API application. For accessing playground go to your Open API applications page, click on an application playground button: Playground allows you to easily get an access token for one of your Open API applications, once you are in your application playground page click on \"Get Token\" button: It will send you to the account authentication page for your own logged in cTrader ID, select some of your connected trading accounts for authorization and click on the \"Allow Access\" button. You will be redirected back to playground page but this time it will show you the access token data: You can use that access token for sending/receiving messages to the API.","title":"Playground"},{"location":"account-authentication/#authorization","text":"In order to obtain access to a trading account\u2019s information and trade on its behalf, you should have an authentication token for each cTrader ID that uses your application. cTrader gives each user a cID, and all of the trading accounts of that user from all brokers will be linked to that cID, and Open API uses cID to give you access to some or all of a user linked trading accounts based on the user given permission. First you must have an active Open API application, your API application status on your applications page must be \"Active\", then add a redirect URL to your API application, the API will redirect the user to this URL after account authorization and it will pass the access code as a URL parameter.","title":"Authorization"},{"location":"account-authentication/#adding-redirect-uri","text":"Open your applications page, and click on your application \"Edit\" button: In your application edit page, scroll down and find the \"Redirect URIs\" section: As you can see your application can have as many redirect URI as it needs, and you can add a new one by clicking on the \"Add Redirect URI\" button. The first redirect URI is for the playground, you can't remove or change it, and you must not use it on your products. Once you add the \"Redirect URIs\" click on \"Save\" and that's it.","title":"Adding Redirect URI"},{"location":"account-authentication/#getting-authorization-code","text":"Now you are ready to get an authentication code from a cTrader user, URI: https://connect.spotware.com/apps/auth?client_id={your_app_client_id}&redirect_uri={redirect_uri}&scope=accounts Example: https://connect.spotware.com/apps/auth?client_id=7_5az7pj935owsss8kgokcco84wc8osk0g0gksow0ow4s4ocwwgc&redirect_uri=http%3A%2F%2Fwww.spotware.com%2F&scope=accounts You have to replace the \"your_app_client_id\" with your Open API application client ID and \"redirect_uri\" with one of your application redirect URIs. After you fill the authentication URI with your app credentials, open it and you will see the cTrader ID login page. Login to a cTrader ID with some trading account, after logging in you will see the cTrader ID trading accounts list, with a check box for authorizing access to that trading account. Click on \"Allow Access\" button, you will be redirected to your application redirect URI and the Authorization Code will be appended as a parameter to the redirect URI: https://my-redirect-uri.com/?code={authorization_code-code-will-be-here} Get the authorization code from redirect URI and generate an access token from it. The authorization code has a one minute expiry time, you must exchange it with an access token as soon as possible otherwise it will be invalidated.","title":"Getting Authorization Code"},{"location":"account-authentication/#getting-access-token","text":"To exchange an authorization code with an access token you have to send the authorization code to this URI: https://connect.spotware.com/apps/token?grant_type=authorization_code&code={authorization_code}&redirect_uri={redirect_uri}&client_id={your_app_client_id}&client_secret={your_app_client_secret} Example: https://connect.spotware.com/apps/token?grant_type=authorization_code&code={authorization_code}&redirect_uri=http%3A%2F%2Fwww.spotware.com%2F&client_id=7_5az7pj935owsss8kgokcco84wc8osk0g0gksow0ow4s4ocwwgc&client_secret=49p1ynqfy7c4sw84gwoogwwsk8cocg8ow8gc8o80c0ws448cs4 It will return back an access token in JSON, the response will have this properties: * accessToken * refreshToken * expiresIn * tokenType * errorCode * description Example: { \"accessToken\" : \"mos8Bw3D4EG0fRPd4Eqq0JxaFT4zjd8e4YijNezh_ag\" , \"tokenType\" : \"bearer\" , \"expiresIn\" : 2628000 , \"refreshToken\" : \"VCuafFhy81AFZjsWkbuEzdOhhRj5YTWz8fWUwHam7KM\" , \"errorCode\" : null , \"access_token\" : \"mos8Bw3D4EG0fRPd4Eqq0JxaFT4zjd8e4YijNezh_ag\" , \"refresh_token\" : \"VCuafFhy81AFZjsWkbuEzdOhhRj5YTWz8fWUwHam7KM\" , \"expires_in\" : 2628000 } The above token will expire after 2628000 seconds from now, the expiry is in seconds which starts from the time you got the token. Once your token expires you can use the refresh token to get a new access token.","title":"Getting Access Token"},{"location":"account-authentication/#refreshing-access-token","text":"The access tokens have expiry time, once a token reaches its expiry you will not be able to use that token anymore, and you have to refresh the expired token. The refresh token never expires and each access token has a refresh token. To refresh your access token you have to send the refresh token to: https://connect.spotware.com/apps/token?grant_type=refresh_token&refresh_token={refresh_token}&client_id={your_app_client_id}&client_secret={your_app_client_secret} It will give you back a new generated token with a new refresh token, now you can use this new token data instead of the old one which is invalidated. Instead of the HTTP request method you can use the ProtoOARefreshTokenReq API message to refresh your expired token via Protocol Buffers and it will return a ProtoOARefreshTokenRes message which will have the new token data. Note If you are not aware of what cTrader ID is, why you need this and how it works, please check the corresponding section below. Because you have to have it to play with OAuth services. If you are not aware of OAuth technology, please check the OAuth standard reference RFC6749: The OAuth 2.0 Authorization Framework.","title":"Refreshing Access Token"},{"location":"api-application/","text":"API Application \u00b6 To interact with Spotware Open API you have to first create an API application, you will use the application credentials for accessing the API. Creating Application \u00b6 You can create an API application by following these steps: Go to Spotware Open API web page: https://connect.spotware.com/ Login with your cTrader ID After logging in go to your applications page: https://connect.spotware.com/apps Click on \"Add New App\" button Provide all the detail related to your application by filling the application form Click on Save button Your new created application must appear on your applications list now and its status will be \"Submitted\" Now you have an API application but you can't use it right now, because the application status is not active and you have to contact Spotware to activate your API application. Activating Application \u00b6 To activate your application first be sure that your application description field is not empty and it provides a good amount of info about your application like what your application will be used for. Then contact Spotware by sending an email to: connect@spotware.com In your email you have to provide your application name and your cTrader ID. Adding Redirect URIs \u00b6 Once your application gets activated by Spotware you can start using the Open API through your application, the next step is to add a redirect URI that will be used for authentication . You can always change your application redirect URIs and add new ones or remove old ones. Note The default redirect URI is only for the playground environment, it will not work outside the playground environment, you can't use it on your own code/program.","title":"API Application"},{"location":"api-application/#api-application","text":"To interact with Spotware Open API you have to first create an API application, you will use the application credentials for accessing the API.","title":"API Application"},{"location":"api-application/#creating-application","text":"You can create an API application by following these steps: Go to Spotware Open API web page: https://connect.spotware.com/ Login with your cTrader ID After logging in go to your applications page: https://connect.spotware.com/apps Click on \"Add New App\" button Provide all the detail related to your application by filling the application form Click on Save button Your new created application must appear on your applications list now and its status will be \"Submitted\" Now you have an API application but you can't use it right now, because the application status is not active and you have to contact Spotware to activate your API application.","title":"Creating Application"},{"location":"api-application/#activating-application","text":"To activate your application first be sure that your application description field is not empty and it provides a good amount of info about your application like what your application will be used for. Then contact Spotware by sending an email to: connect@spotware.com In your email you have to provide your application name and your cTrader ID.","title":"Activating Application"},{"location":"api-application/#adding-redirect-uris","text":"Once your application gets activated by Spotware you can start using the Open API through your application, the next step is to add a redirect URI that will be used for authentication . You can always change your application redirect URIs and add new ones or remove old ones. Note The default redirect URI is only for the playground environment, it will not work outside the playground environment, you can't use it on your own code/program.","title":"Adding Redirect URIs"},{"location":"common-messages/","text":"Common Messages \u00b6 Top ProtoErrorRes \u00b6 Field Type Label Description payloadType ProtoPayloadType optional Default: ERROR_RES errorCode string required Contains name of ProtoErrorCode or other custom ErrorCodes (e.g. ProtoCHErrorCode) description string optional Error description maintenanceEndTimestamp uint64 optional CS-10489 Epoch timestamp in second ProtoHeartbeatEvent \u00b6 Event that is sent from Open API proxy and can be used as criteria that connection is healthy when no other messages are sent by cTrader platform. Open API client can send this message when he needs to keep the connection open for a period without other messages longer than 30 seconds Field Type Label Description payloadType ProtoPayloadType optional Default: HEARTBEAT_EVENT ProtoMessage \u00b6 Field Type Label Description payloadType uint32 required Contains id of ProtoPayloadType or other custom PayloadTypes (e.g. ProtoOAPayloadType) payload bytes optional Serialized protobuf message that corresponds to payloadType clientMsgId string optional Request message id, assigned by the client that will be returned in the response","title":"Common Messages"},{"location":"common-messages/#common-messages","text":"Top","title":"Common Messages"},{"location":"common-messages/#protoerrorres","text":"Field Type Label Description payloadType ProtoPayloadType optional Default: ERROR_RES errorCode string required Contains name of ProtoErrorCode or other custom ErrorCodes (e.g. ProtoCHErrorCode) description string optional Error description maintenanceEndTimestamp uint64 optional CS-10489 Epoch timestamp in second","title":"ProtoErrorRes"},{"location":"common-messages/#protoheartbeatevent","text":"Event that is sent from Open API proxy and can be used as criteria that connection is healthy when no other messages are sent by cTrader platform. Open API client can send this message when he needs to keep the connection open for a period without other messages longer than 30 seconds Field Type Label Description payloadType ProtoPayloadType optional Default: HEARTBEAT_EVENT","title":"ProtoHeartbeatEvent"},{"location":"common-messages/#protomessage","text":"Field Type Label Description payloadType uint32 required Contains id of ProtoPayloadType or other custom PayloadTypes (e.g. ProtoOAPayloadType) payload bytes optional Serialized protobuf message that corresponds to payloadType clientMsgId string optional Request message id, assigned by the client that will be returned in the response","title":"ProtoMessage"},{"location":"common-model-messages/","text":"Common Model Messages \u00b6 Top ProtoErrorCode \u00b6 The error explanations. Name Number Description UNKNOWN_ERROR 1 Generic error. UNSUPPORTED_MESSAGE 2 Message is not supported. Wrong message. INVALID_REQUEST 3 Generic error. Usually used when input value is not correct. TIMEOUT_ERROR 5 Deal execution is reached timeout and rejected. ENTITY_NOT_FOUND 6 Generic error for requests by id. CANT_ROUTE_REQUEST 7 Connection to Server is lost or not supported. FRAME_TOO_LONG 8 Message is too large. MARKET_CLOSED 9 Market is closed. CONCURRENT_MODIFICATION 10 Order is blocked (e.g. under execution) and change cannot be applied. BLOCKED_PAYLOAD_TYPE 11 Message is blocked by server. ProtoPayloadType \u00b6 The unique identifier of the request, response, or event command. Name Number Description PROTO_MESSAGE 5 common intensive ERROR_RES 50 common commands HEARTBEAT_EVENT 51","title":"Common Model Messages"},{"location":"common-model-messages/#common-model-messages","text":"Top","title":"Common Model Messages"},{"location":"common-model-messages/#protoerrorcode","text":"The error explanations. Name Number Description UNKNOWN_ERROR 1 Generic error. UNSUPPORTED_MESSAGE 2 Message is not supported. Wrong message. INVALID_REQUEST 3 Generic error. Usually used when input value is not correct. TIMEOUT_ERROR 5 Deal execution is reached timeout and rejected. ENTITY_NOT_FOUND 6 Generic error for requests by id. CANT_ROUTE_REQUEST 7 Connection to Server is lost or not supported. FRAME_TOO_LONG 8 Message is too large. MARKET_CLOSED 9 Market is closed. CONCURRENT_MODIFICATION 10 Order is blocked (e.g. under execution) and change cannot be applied. BLOCKED_PAYLOAD_TYPE 11 Message is blocked by server.","title":"ProtoErrorCode"},{"location":"common-model-messages/#protopayloadtype","text":"The unique identifier of the request, response, or event command. Name Number Description PROTO_MESSAGE 5 common intensive ERROR_RES 50 common commands HEARTBEAT_EVENT 51","title":"ProtoPayloadType"},{"location":"common-types/","text":"Scalar Value Types \u00b6 .proto Type Notes C++ Java Python Go C# PHP Ruby double double double float float64 double float Float float float float float float32 float float Float int32 Uses variable-length encoding. Inefficient for encoding negative numbers - if your field is likely to have negative values, use sint32 instead. int32 int int int32 int integer Bignum or Fixnum (as required) int64 Uses variable-length encoding. Inefficient for encoding negative numbers - if your field is likely to have negative values, use sint64 instead. int64 long int/long int64 long integer/string Bignum uint32 Uses variable-length encoding. uint32 int int/long uint32 uint integer Bignum or Fixnum (as required) uint64 Uses variable-length encoding. uint64 long int/long uint64 ulong integer/string Bignum or Fixnum (as required) sint32 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s. int32 int int int32 int integer Bignum or Fixnum (as required) sint64 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s. int64 long int/long int64 long integer/string Bignum fixed32 Always four bytes. More efficient than uint32 if values are often greater than 2^28. uint32 int int uint32 uint integer Bignum or Fixnum (as required) fixed64 Always eight bytes. More efficient than uint64 if values are often greater than 2^56. uint64 long int/long uint64 ulong integer/string Bignum sfixed32 Always four bytes. int32 int int int32 int integer Bignum or Fixnum (as required) sfixed64 Always eight bytes. int64 long int/long int64 long integer/string Bignum bool bool boolean boolean bool bool boolean TrueClass/FalseClass string A string must always contain UTF-8 encoded or 7-bit ASCII text. string String str/unicode string string string String (UTF-8) bytes May contain any arbitrary sequence of bytes. string ByteString str []byte ByteString string String (ASCII-8BIT)","title":"Common Types"},{"location":"common-types/#scalar-value-types","text":".proto Type Notes C++ Java Python Go C# PHP Ruby double double double float float64 double float Float float float float float float32 float float Float int32 Uses variable-length encoding. Inefficient for encoding negative numbers - if your field is likely to have negative values, use sint32 instead. int32 int int int32 int integer Bignum or Fixnum (as required) int64 Uses variable-length encoding. Inefficient for encoding negative numbers - if your field is likely to have negative values, use sint64 instead. int64 long int/long int64 long integer/string Bignum uint32 Uses variable-length encoding. uint32 int int/long uint32 uint integer Bignum or Fixnum (as required) uint64 Uses variable-length encoding. uint64 long int/long uint64 ulong integer/string Bignum or Fixnum (as required) sint32 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s. int32 int int int32 int integer Bignum or Fixnum (as required) sint64 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s. int64 long int/long int64 long integer/string Bignum fixed32 Always four bytes. More efficient than uint32 if values are often greater than 2^28. uint32 int int uint32 uint integer Bignum or Fixnum (as required) fixed64 Always eight bytes. More efficient than uint64 if values are often greater than 2^56. uint64 long int/long uint64 ulong integer/string Bignum sfixed32 Always four bytes. int32 int int int32 int integer Bignum or Fixnum (as required) sfixed64 Always eight bytes. int64 long int/long int64 long integer/string Bignum bool bool boolean boolean bool bool boolean TrueClass/FalseClass string A string must always contain UTF-8 encoded or 7-bit ASCII text. string String str/unicode string string string String (UTF-8) bytes May contain any arbitrary sequence of bytes. string ByteString str []byte ByteString string String (ASCII-8BIT)","title":"Scalar Value Types"},{"location":"connection/","text":"For connection we will use a TCP client socket and a SSL stream over socket stream. The API has separate endpoints for live and demo trading accounts, if you want to work on your program with both types of accounts you must have a connection with each endpoint. You can get the API endpoints from here . You can't use a live endpoint connection to interact with demo trading accounts or vice versa, if you try you will receive a routing error from API. You must use the SSL stream for all your read/write operations, not the actual client stream. If you are building a trading platform or integrating cTrader on your platform you can follow these guidelines: Create only two connections for live and demo endpoints Use the live connection for live trading accounts and demo connection for demo trading accounts, you can handle large number of accounts with just one connection, there is no need to create more connections After you got connected, authorize your API application for each connection by sending a ProtoOAApplicationAuthReq message The API will send you back a ProtoOAApplicationAuthRes message, it means your API application is authorized and you are ready to go Don't try to send any message before authorizing your application, otherwise you will receive an error To keep alive your connections keep sending a ProtoHeartbeatEvent in 10 seconds interval Use a message queue for reading/writing to connection streams for avoiding concurrent read/write, or any other solution that is available for you based on your environment Please check the endpoints limitations to avoid connection issues","title":"Connection"},{"location":"faq/","text":"Frequently Asked Questions \u00b6 In this page you will find frequently asked questions by API users Why do I get 429 error response? \u00b6 The 429 error response means that the user has sent too many requests in a given amount of time. API endpoints or subjects to some limitation, you can find them here Why does my application get disconnected frequently? \u00b6 Applications are disconnected by the server after some time of inactivity. In order to avoid getting disconnected from the server, make sure that you send a heartbeat to the server at least once every 10 seconds. Why I can't connect to API during weekends? \u00b6 Sometimes we do maintenance and upgrades during weekends, and the API will be down during the maintenance time. Why do I get invalid route error? \u00b6 Most probably you are using invalid endpoint, be sure to use the live endpoint for live trading accounts and demo endpoint for demo trading account, for more about endpoints check here . Why do I get errors in messages serialization/deserialization with Google Protocol Buffers? \u00b6 Please read the reading/writing tutorial.","title":"F.A.Qs"},{"location":"faq/#frequently-asked-questions","text":"In this page you will find frequently asked questions by API users","title":"Frequently Asked Questions"},{"location":"faq/#why-do-i-get-429-error-response","text":"The 429 error response means that the user has sent too many requests in a given amount of time. API endpoints or subjects to some limitation, you can find them here","title":"Why do I get 429 error response?"},{"location":"faq/#why-does-my-application-get-disconnected-frequently","text":"Applications are disconnected by the server after some time of inactivity. In order to avoid getting disconnected from the server, make sure that you send a heartbeat to the server at least once every 10 seconds.","title":"Why does my application get disconnected frequently?"},{"location":"faq/#why-i-cant-connect-to-api-during-weekends","text":"Sometimes we do maintenance and upgrades during weekends, and the API will be down during the maintenance time.","title":"Why I can't connect to API during weekends?"},{"location":"faq/#why-do-i-get-invalid-route-error","text":"Most probably you are using invalid endpoint, be sure to use the live endpoint for live trading accounts and demo endpoint for demo trading account, for more about endpoints check here .","title":"Why do I get invalid route error?"},{"location":"faq/#why-do-i-get-errors-in-messages-serializationdeserialization-with-google-protocol-buffers","text":"Please read the reading/writing tutorial.","title":"Why do I get errors in messages serialization/deserialization with Google Protocol Buffers?"},{"location":"messages/","text":"Messages \u00b6 Top ProtoOAAccountAuthReq \u00b6 Request for the authorizing trading account session. Requires established authorized connection with the client application using ProtoOAApplicationAuthReq. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_ACCOUNT_AUTH_REQ ctidTraderAccountId int64 required The unique identifier of the trader's account in cTrader platform. accessToken string required The Access Token issued for providing access to the Trader's Account. ProtoOAAccountAuthRes \u00b6 Response to the ProtoOAApplicationAuthRes request. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_ACCOUNT_AUTH_RES ctidTraderAccountId int64 required The unique identifier of the trader's account in cTrader platform. ProtoOAAccountDisconnectEvent \u00b6 Event that is sent when the established session for an account is dropped on the server side. A new session must be authorized for the account. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_ACCOUNT_DISCONNECT_EVENT ctidTraderAccountId int64 required The unique identifier of the trader's account in cTrader platform. ProtoOAAccountLogoutReq \u00b6 Request for logout of trading account session. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_ACCOUNT_LOGOUT_REQ ctidTraderAccountId int64 required The unique identifier of the trader's account in cTrader platform. ProtoOAAccountLogoutRes \u00b6 Response to the ProtoOATraderLogoutReq request. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_ACCOUNT_LOGOUT_RES ctidTraderAccountId int64 required The unique identifier of the trader's account in cTrader platform. ProtoOAAccountsTokenInvalidatedEvent \u00b6 Event that is sent when a session to a specific trader's account is terminated by the server but the existing connections with the other trader's accounts are maintained. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_ACCOUNTS_TOKEN_INVALIDATED_EVENT ctidTraderAccountIds int64 repeated The unique identifier of the trader's account in cTrader platform. reason string optional The disconnection reason explained. For example: Access Token is expired or recalled. ProtoOAAmendOrderReq \u00b6 Request for amending the existing pending order. Allowed only if the Access Token has \"trade\" permissions for the trading account. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_AMEND_ORDER_REQ ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts. orderId int64 required The unique ID of the order. volume int64 optional Volume, represented in 0.01 of a unit (e.g. cents). limitPrice double optional The Limit Price, can be specified for the LIMIT order only. stopPrice double optional The Stop Price, can be specified for the STOP and the STOP_LIMIT orders. expirationTimestamp int64 optional The exact Order expiration time. Should be set for the Good Till Date orders. stopLoss double optional The absolute Stop Loss price (e.g. 1.23456). Not supported for the MARKER orders. takeProfit double optional The absolute Take Profit price (e.g. 1.23456). Not supported for the MARKER orders. slippageInPoints int32 optional Slippage distance for the MARKET_RANGE and the STOP_LIMIT orders. relativeStopLoss int64 optional The relative Stop Loss can be specified instead of the absolute one. Specified in 1/100000 of a unit of price. For BUY stopLoss = entryPrice - relativeStopLoss, for SELL stopLoss = entryPrice + relativeStopLoss. relativeTakeProfit int64 optional The relative Take Profit can be specified instead of the absolute one. Specified in 1/100000 of a unit of price. For BUY takeProfit = entryPrice + relativeTakeProfit, for SELL takeProfit = entryPrice - relativeTakeProfit. guaranteedStopLoss bool optional If TRUE then the Stop Loss is guaranteed. Available for the French Risk or the Guaranteed Stop Loss Accounts. trailingStopLoss bool optional If TRUE then the Trailing Stop Loss is applied. stopTriggerMethod ProtoOAOrderTriggerMethod optional Trigger method for the STOP or the STOP_LIMIT pending order. Default: TRADE ProtoOAAmendPositionSLTPReq \u00b6 Request for amending StopLoss and TakeProfit of existing position. Allowed only if the accessToken has \"trade\" permissions for the trading account. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_AMEND_POSITION_SLTP_REQ ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts. positionId int64 required The unique ID of the position to amend. stopLoss double optional Absolute Stop Loss price (1.23456 for example). takeProfit double optional Absolute Take Profit price (1.26543 for example). guaranteedStopLoss bool optional If TRUE then the Stop Loss is guaranteed. Available for the French Risk or the Guaranteed Stop Loss Accounts. trailingStopLoss bool optional If TRUE then the Trailing Stop Loss is applied. stopLossTriggerMethod ProtoOAOrderTriggerMethod optional The Stop trigger method for the Stop Loss/Take Profit order. Default: TRADE ProtoOAApplicationAuthReq \u00b6 Request for the authorizing an application to work with the cTrader platform Proxies. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_APPLICATION_AUTH_REQ clientId string required The unique Client ID provided during the registration. clientSecret string required The unique Client Secret provided during the registration. ProtoOAApplicationAuthRes \u00b6 Response to the ProtoOAApplicationAuthReq request. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_APPLICATION_AUTH_RES ProtoOAAssetClassListReq \u00b6 Request for a list of asset classes available for the trader's account. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_ASSET_CLASS_LIST_REQ ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts. ProtoOAAssetClassListRes \u00b6 Response to the ProtoOAAssetListReq request. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_ASSET_CLASS_LIST_RES ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts. assetClass ProtoOAAssetClass repeated List of the asset classes. ProtoOAAssetListReq \u00b6 Request for the list of assets available for a trader's account. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_ASSET_LIST_REQ ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts. ProtoOAAssetListRes \u00b6 Response to the ProtoOAAssetListReq request. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_ASSET_LIST_RES ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts. asset ProtoOAAsset repeated The list of assets. ProtoOACancelOrderReq \u00b6 Request for cancelling existing pending order. Allowed only if the accessToken has \"trade\" permissions for the trading account. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_CANCEL_ORDER_REQ ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts. orderId int64 required The unique ID of the order. ProtoOACashFlowHistoryListReq \u00b6 Request for getting Trader's historical data of deposits and withdrawals. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_CASH_FLOW_HISTORY_LIST_REQ ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts. fromTimestamp int64 required The UNIX time from which the search starts >=0 (1-1-1970). Validation: toTimestamp - fromTimestamp <= 604800000 (1 week). toTimestamp int64 required The UNIX time where to stop searching <= 2147483646000 (19-1-2038). ProtoOACashFlowHistoryListRes \u00b6 Response to the ProtoOACashFlowHistoryListReq request. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_CASH_FLOW_HISTORY_LIST_RES ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts. depositWithdraw ProtoOADepositWithdraw repeated The list of deposit and withdrawal operations. ProtoOAClientDisconnectEvent \u00b6 Event that is sent when the connection with the client application is cancelled by the server. All the sessions for the traders' accounts will be terminated. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_CLIENT_DISCONNECT_EVENT reason string optional The disconnection reason explained. For example: The application access was blocked by cTrader Administrator. ProtoOAClosePositionReq \u00b6 Request for closing or partially closing of an existing position. Allowed only if the accessToken has \"trade\" permissions for the trading account. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_CLOSE_POSITION_REQ ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts. positionId int64 required The unique ID of the position to close. volume int64 required Volume to close, represented in 0.01 of a unit (e.g. cents). ProtoOADealListReq \u00b6 Request for getting Trader's deals historical data (execution details). Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_DEAL_LIST_REQ ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts. fromTimestamp int64 required The UNIX time from which the search starts >=0 (1-1-1970). Validation: toTimestamp - fromTimestamp <= 604800000 (1 week). toTimestamp int64 required The UNIX time where to stop searching <= 2147483646000 (19-1-2038). maxRows int32 optional The maximum number of the deals to return. ProtoOADealListRes \u00b6 The response to the ProtoOADealListRes request. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_DEAL_LIST_RES ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts. deal ProtoOADeal repeated The list of the deals. hasMore bool required If TRUE then the response will provide more than 10000 deals. ProtoOADepthEvent \u00b6 Event that is sent when the structure of depth of market is changed. Requires subscription on the depth of markets for the symbol, see ProtoOASubscribeDepthQuotesReq. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_DEPTH_EVENT ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts. symbolId uint64 required Unique identifier of the Symbol in cTrader platform. newQuotes ProtoOADepthQuote repeated The list of changes in the depth of market quotes. deletedQuotes uint64 repeated The list of quotes to delete. ProtoOAErrorRes \u00b6 Generic response when an ERROR occurred. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_ERROR_RES ctidTraderAccountId int64 optional The unique identifier of the trader's account in cTrader platform. errorCode string required The name of the ProtoErrorCode or the other custom ErrorCodes (e.g. ProtoCHErrorCode). description string optional The error description. maintenanceEndTimestamp int64 optional The timestamp in seconds when the current maintenance session will be ended. ProtoOAExecutionEvent \u00b6 Event that is sent following the successful order acceptance or execution by the server. Acts as response to the ProtoOANewOrderReq, ProtoOACancelOrderReq, ProtoOAAmendOrderReq, ProtoOAAmendPositionSLTPReq, ProtoOAClosePositionReq requests. Also, the event is sent when a Deposit/Withdrawal took place. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_EXECUTION_EVENT ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts. executionType ProtoOAExecutionType required Type of the order operation. For example: ACCEPTED, FILLED, etc. position ProtoOAPosition optional Reference to the position linked with the execution order ProtoOAOrder optional Reference to the initial order. deal ProtoOADeal optional Reference to the deal (execution). bonusDepositWithdraw ProtoOABonusDepositWithdraw optional Reference to the Bonus Deposit or Withdrawal operation. depositWithdraw ProtoOADepositWithdraw optional Reference to the Deposit or Withdrawal operation. errorCode string optional The name of the ProtoErrorCode or the other custom ErrorCodes (e.g. ProtoCHErrorCode). isServerEvent bool optional If TRUE then the event generated by the server logic instead of the trader's request. (e.g. stop-out). ProtoOAExpectedMarginReq \u00b6 Request for getting the margin estimate. Can be used before sending a new order request. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_EXPECTED_MARGIN_REQ ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts. symbolId int64 required Unique identifier of the Symbol in cTrader platform. volume int64 repeated Volume represented in 0.01 of a unit (e.g. cents). ProtoOAExpectedMarginRes \u00b6 The response to the ProtoOAExpectedMarginReq request. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_EXPECTED_MARGIN_RES ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts. margin ProtoOAExpectedMargin repeated The buy and sell margin estimate. moneyDigits uint32 optional Specifies the exponent of the monetary values. E.g. moneyDigits = 8 must be interpret as business value multiplied by 10^8, then real balance would be 10053099944 / 10^8 = 100.53099944. Affects margin.buyMargin, margin.sellMargin. ProtoOAGetAccountListByAccessTokenReq \u00b6 Request for getting the list of granted trader's account for the access token. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_REQ accessToken string required The Access Token issued for providing access to the Trader's Account. ProtoOAGetAccountListByAccessTokenRes \u00b6 Response to the ProtoOAGetAccountListByAccessTokenReq request. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_RES accessToken string required The Access Token issued for providing access to the Trader's Account. permissionScope ProtoOAClientPermissionScope optional SCOPE_VIEW, SCOPE_TRADE. ctidTraderAccount ProtoOACtidTraderAccount repeated The list of the accounts. ProtoOAGetCtidProfileByTokenReq \u00b6 Request for getting details of Trader's profile. Limited due to GDRP requirements. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_REQ accessToken string required The Access Token issued for providing access to the Trader's Account. ProtoOAGetCtidProfileByTokenRes \u00b6 Response to the ProtoOAGetCtidProfileByTokenReq request. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_RES profile ProtoOACtidProfile required Trader's profile. ProtoOAGetTickDataReq \u00b6 Request for getting historical tick data for the symbol. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_GET_TICKDATA_REQ ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts. symbolId int64 required Unique identifier of the Symbol in cTrader platform. type ProtoOAQuoteType required Bid/Ask (\u00bd). fromTimestamp int64 required The exact time of starting the search in milliseconds. Must be bigger of equal to zero (1-1-1970). Validation: toTimestamp - fromTimestamp <= 604800000 (1 week). toTimestamp int64 required The exact time of finishing the search in milliseconds <= 2147483646000 (19-1-2038). ProtoOAGetTickDataRes \u00b6 Response to the ProtoOAGetTickDataReq request. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_GET_TICKDATA_RES ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts. tickData ProtoOATickData repeated The list of ticks. hasMore bool required If TRUE then the number of records by filter is larger than chunkSize, the response contains the number of records that is equal to chunkSize. ProtoOAGetTrendbarsReq \u00b6 Request for getting historical trend bars for the symbol. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_GET_TRENDBARS_REQ ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts. fromTimestamp int64 required The exact time of starting the search in milliseconds. Must be bigger or equal to zero (1-1-1970). Validation: toTimestamp - fromTimestamp <= X, where X depends on series period: M1, M2, M3, M4, M5: 302400000 (5 weeks); M10, M15, M30, H1: 21168000000 (35 weeks), H4, H12, D1: 31622400000 (1 year); W1, MN1: 158112000000 (5 years). toTimestamp int64 required The exact time of finishing the search in milliseconds. Smaller or equal to 2147483646000 (19-1-2038). period ProtoOATrendbarPeriod required Specifies period of trend bar series (e.g. M1, M10, etc.). symbolId int64 required Unique identifier of the Symbol in cTrader platform. ProtoOAGetTrendbarsRes \u00b6 Response to the ProtoOAGetTrendbarsReq request. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_GET_TRENDBARS_RES ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts. period ProtoOATrendbarPeriod required Specifies period of trend bar series (e.g. M1, M10, etc.). timestamp int64 required Equals to toTimestamp from the request. trendbar ProtoOATrendbar repeated The list of trend bars. symbolId int64 optional Unique identifier of the Symbol in cTrader platform. ProtoOAMarginCallListReq \u00b6 Request for a list of existing margin call thresholds configured for a user. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_MARGIN_CALL_LIST_REQ ctidTraderAccountId int64 required ProtoOAMarginCallListRes \u00b6 Response with a list of existing user Margin Calls, usually contains 3 items. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_MARGIN_CALL_LIST_RES marginCall ProtoOAMarginCall repeated ProtoOAMarginCallTriggerEvent \u00b6 Event that is sent when account margin level reaches target marginLevelThreshold. Event is sent no more than once every 10 minutes to avoid spamming. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_MARGIN_CALL_TRIGGER_EVENT ctidTraderAccountId int64 required marginCall ProtoOAMarginCall required ProtoOAMarginCallUpdateEvent \u00b6 Event that is sent when a Margin Call threshold configuration is updated. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_MARGIN_CALL_UPDATE_EVENT ctidTraderAccountId int64 required marginCall ProtoOAMarginCall required ProtoOAMarginCallUpdateReq \u00b6 Request to modify marginLevelThreshold of specified marginCallType for ctidTraderAccountId. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_MARGIN_CALL_UPDATE_REQ ctidTraderAccountId int64 required marginCall ProtoOAMarginCall required ProtoOAMarginCallUpdateRes \u00b6 If this response received, it means that margin call was successfully updated. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_MARGIN_CALL_UPDATE_RES ProtoOAMarginChangedEvent \u00b6 Event that is sent when the margin allocated to a specific position is changed. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_MARGIN_CHANGED_EVENT ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts. positionId uint64 required The unique ID of the position. usedMargin uint64 required The new value of the margin used. moneyDigits uint32 optional Specifies the exponent of the monetary values. E.g. moneyDigits = 8 must be interpret as business value multiplied by 10^8, then real balance would be 10053099944 / 10^8 = 100.53099944. Affects usedMargin. ProtoOANewOrderReq \u00b6 Request for sending a new trading order. Allowed only if the accessToken has the \"trade\" permissions for the trading account. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_NEW_ORDER_REQ ctidTraderAccountId int64 required The unique identifier of the trader's account in cTrader platform. symbolId int64 required The unique identifier of a symbol in cTrader platform. orderType ProtoOAOrderType required The type of an order - MARKET, LIMIT, STOP, MARKET_RANGE, STOP_LIMIT. tradeSide ProtoOATradeSide required The trade direction - BUY or SELL. volume int64 required The volume represented in 0.01 of a unit (e.g. US$ 10.00 = 1000). limitPrice double optional The limit price, can be specified for the LIMIT order only. stopPrice double optional Stop Price, can be specified for the STOP and the STOP_LIMIT orders only. timeInForce ProtoOATimeInForce optional The specific order execution or expiration instruction - GOOD_TILL_DATE, GOOD_TILL_CANCEL, IMMEDIATE_OR_CANCEL, FILL_OR_KILL, MARKET_ON_OPEN. Default: GOOD_TILL_CANCEL expirationTimestamp int64 optional The exact Order expiration time. Should be set for the Good Till Date orders. stopLoss double optional The absolute Stop Loss price (1.23456 for example). Not supported for the MARKER orders. takeProfit double optional The absolute Take Profit price (1.23456 for example). Unsupported for the MARKER orders. comment string optional User-specified comment. MaxLength = 512. baseSlippagePrice double optional Base price to calculate relative slippage price for MARKET_RANGE order. slippageInPoints int32 optional Slippage distance for MARKET_RANGE and STOP_LIMIT order. label string optional User-specified label. MaxLength = 100. positionId int64 optional Reference to the existing position if the Order is intended to modify it. clientOrderId string optional Optional user-specific clientOrderId (similar to FIX ClOrderID). MaxLength = 50. relativeStopLoss int64 optional Relative Stop Loss that can be specified instead of the absolute as one. Specified in 1/100000 of unit of a price. For BUY stopLoss = entryPrice - relativeStopLoss, for SELL stopLoss = entryPrice + relativeStopLoss. relativeTakeProfit int64 optional Relative Take Profit that can be specified instead of the absolute one. Specified in 1/100000 of unit of a price. For BUY takeProfit = entryPrice + relativeTakeProfit, for SELL takeProfit = entryPrice - relativeTakeProfit. guaranteedStopLoss bool optional If TRUE then stopLoss is guaranteed. Available for the French Risk or the Guaranteed Stop Loss Accounts. trailingStopLoss bool optional If TRUE then the Stop Loss is Trailing. stopTriggerMethod ProtoOAOrderTriggerMethod optional Trigger method for the STOP or the STOP_LIMIT pending order. Default: TRADE ProtoOAOrderErrorEvent \u00b6 Event that is sent when errors occur during the order requests. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_ORDER_ERROR_EVENT ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts. errorCode string required The name of the ProtoErrorCode or the other custom ErrorCodes (e.g. ProtoCHErrorCode). orderId int64 optional The unique ID of the order. positionId int64 optional The unique ID of the position. description string optional The error description. ProtoOAReconcileReq \u00b6 Request for getting Trader's current open positions and pending orders data. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_RECONCILE_REQ ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts. ProtoOAReconcileRes \u00b6 The response to the ProtoOAReconcileReq request. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_RECONCILE_RES ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts. position ProtoOAPosition repeated The list of trader's account open positions. order ProtoOAOrder repeated The list of trader's account pending orders. ProtoOARefreshTokenReq \u00b6 Request to refresh the access token using refresh token of granted trader's account. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_REFRESH_TOKEN_REQ refreshToken string required The Refresh Token issued for updating Access Token. ProtoOARefreshTokenRes \u00b6 Response to the ProtoOARefreshTokenReq request. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_REFRESH_TOKEN_RES accessToken string required The Access Token issued for providing access to the Trader's Account. tokenType string required bearer expiresIn int64 required Access Token expiration in seconds refreshToken string required ProtoOASpotEvent \u00b6 Event that is sent when a new spot event is generated on the server side. Requires subscription on the spot events, see ProtoOASubscribeSpotsReq. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_SPOT_EVENT ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts. symbolId int64 required Unique identifier of the Symbol in cTrader platform. bid uint64 optional Bid price. Specified in 1/100_000 of unit of a price. (e.g. 1.23 -> 123_000) ask uint64 optional Ask price. Specified in 1/100_000 of unit of a price. trendbar ProtoOATrendbar repeated Returns live trend bar. Requires subscription on the trend bars. sessionClose uint64 optional Last session close. Specified in 1/100_000 of unit of a price. ProtoOASubscribeDepthQuotesReq \u00b6 Request for subscribing on depth of market of the specified symbol. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_REQ ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts. symbolId int64 repeated Unique identifier of the Symbol in cTrader platform. ProtoOASubscribeDepthQuotesRes \u00b6 Response to the ProtoOASubscribeDepthQuotesReq request. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_RES ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts. ProtoOASubscribeLiveTrendbarReq \u00b6 Request for subscribing for live trend bars. Requires subscription on the spot events, see ProtoOASubscribeSpotsReq. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_SUBSCRIBE_LIVE_TRENDBAR_REQ ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts. period ProtoOATrendbarPeriod required Specifies period of trend bar series (e.g. M1, M10, etc.). symbolId int64 required Unique identifier of the Symbol in cTrader platform. ProtoOASubscribeLiveTrendbarRes \u00b6 Response to the ProtoOASubscribeLiveTrendbarReq request. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_SUBSCRIBE_LIVE_TRENDBAR_RES ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts. ProtoOASubscribeSpotsReq \u00b6 Request for subscribing on spot events of the specified symbol. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_SUBSCRIBE_SPOTS_REQ ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts. symbolId int64 repeated Unique identifier of the Symbol in cTrader platform. ProtoOASubscribeSpotsRes \u00b6 Response to the ProtoOASubscribeSpotsReq request. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_SUBSCRIBE_SPOTS_RES ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts. ProtoOASymbolByIdReq \u00b6 Request for getting a full symbol entity. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_SYMBOL_BY_ID_REQ ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts. symbolId int64 repeated Unique identifier of the symbol in cTrader platform. ProtoOASymbolByIdRes \u00b6 Response to the ProtoOASymbolByIdReq request. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_SYMBOL_BY_ID_RES ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts. symbol ProtoOASymbol repeated Symbol entity with the full set of fields. archivedSymbol ProtoOAArchivedSymbol repeated Archived symbols. ProtoOASymbolCategoryListReq \u00b6 Request for a list of symbol categories available for a trading account. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_SYMBOL_CATEGORY_REQ ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts. ProtoOASymbolCategoryListRes \u00b6 Response to the ProtoSymbolCategoryListReq request. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_SYMBOL_CATEGORY_RES ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts. symbolCategory ProtoOASymbolCategory repeated The list of symbol categories. ProtoOASymbolChangedEvent \u00b6 Event that is sent when the symbol is changed on the Server side. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_SYMBOL_CHANGED_EVENT ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts. symbolId int64 repeated Unique identifier of the Symbol in cTrader platform. ProtoOASymbolsForConversionReq \u00b6 Request for getting a conversion chain between two assets that consists of several symbols. Use when no direct quote is available Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_SYMBOLS_FOR_CONVERSION_REQ ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts. firstAssetId int64 required The ID of the firs asset in the conversation chain. e.g.: for EUR/USD the firstAssetId is EUR ID and lastAssetId is USD ID. lastAssetId int64 required The ID of the last asset in the conversation chain. e.g.: for EUR/USD the firstAssetId is EUR ID and lastAssetId is USD ID. ProtoOASymbolsForConversionRes \u00b6 Response to the ProtoOASymbolsForConversionReq request. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_SYMBOLS_FOR_CONVERSION_RES ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts. symbol ProtoOALightSymbol repeated Conversion chain of the symbols (e.g. EUR/USD, USD/JPY, GBP/JPY -> EUR/GBP). ProtoOASymbolsListReq \u00b6 Request for a list of symbols available for a trading account. Symbol entries are returned with the limited set of fields. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_SYMBOLS_LIST_REQ ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts. includeArchivedSymbols bool optional Default: false ProtoOASymbolsListRes \u00b6 Response to the ProtoOASymbolsListReq request. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_SYMBOLS_LIST_RES ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts. symbol ProtoOALightSymbol repeated The list of symbols. archivedSymbol ProtoOAArchivedSymbol repeated The list of archived symbols. ProtoOATraderReq \u00b6 Request for getting data of Trader's Account. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_TRADER_REQ ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts. ProtoOATraderRes \u00b6 Response to the ProtoOATraderReq request. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_TRADER_RES ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts. trader ProtoOATrader required The Trader account information. ProtoOATraderUpdatedEvent \u00b6 Event that is sent when a Trader is updated on Server side. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_TRADER_UPDATE_EVENT ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts. trader ProtoOATrader required The Trader account information. ProtoOATrailingSLChangedEvent \u00b6 Event that is sent when the level of the Trailing Stop Loss is changed due to the price level changes. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_TRAILING_SL_CHANGED_EVENT ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts. positionId int64 required The unique ID of the position. orderId int64 required The unique ID of the order. stopPrice double required New value of the Stop Loss price. utcLastUpdateTimestamp int64 required The exact UTC time when the Stop Loss was updated. ProtoOAUnsubscribeDepthQuotesReq \u00b6 Request for unsubscribing from the depth of market of the specified symbol. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_REQ ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts. symbolId int64 repeated Unique identifier of the Symbol in cTrader platform. ProtoOAUnsubscribeDepthQuotesRes \u00b6 Response to the ProtoOAUnsubscribeDepthQuotesReq request. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_RES ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts. ProtoOAUnsubscribeLiveTrendbarReq \u00b6 Request for unsubscribing from the live trend bars. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_UNSUBSCRIBE_LIVE_TRENDBAR_REQ ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts. period ProtoOATrendbarPeriod required Specifies period of trend bar series (e.g. M1, M10, etc.). symbolId int64 required Unique identifier of the Symbol in cTrader platform. ProtoOAUnsubscribeLiveTrendbarRes \u00b6 Response to the ProtoOASubscribeLiveTrendbarReq request. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_UNSUBSCRIBE_LIVE_TRENDBAR_RES ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts. ProtoOAUnsubscribeSpotsReq \u00b6 Request for unsubscribing from the spot events of the specified symbol. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_UNSUBSCRIBE_SPOTS_REQ ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts. symbolId int64 repeated Unique identifier of the Symbol in cTrader platform. ProtoOAUnsubscribeSpotsRes \u00b6 Response to the ProtoOASubscribeSpotsRes request. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_UNSUBSCRIBE_SPOTS_RES ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts. ProtoOAVersionReq \u00b6 Request for getting the proxy version. Can be used to check the current version of the Open API scheme. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_VERSION_REQ ProtoOAVersionRes \u00b6 Response to the ProtoOAVersionReq request. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_VERSION_RES version string required The current version of the server application.","title":"Messages"},{"location":"messages/#messages","text":"Top","title":"Messages"},{"location":"messages/#protooaaccountauthreq","text":"Request for the authorizing trading account session. Requires established authorized connection with the client application using ProtoOAApplicationAuthReq. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_ACCOUNT_AUTH_REQ ctidTraderAccountId int64 required The unique identifier of the trader's account in cTrader platform. accessToken string required The Access Token issued for providing access to the Trader's Account.","title":"ProtoOAAccountAuthReq"},{"location":"messages/#protooaaccountauthres","text":"Response to the ProtoOAApplicationAuthRes request. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_ACCOUNT_AUTH_RES ctidTraderAccountId int64 required The unique identifier of the trader's account in cTrader platform.","title":"ProtoOAAccountAuthRes"},{"location":"messages/#protooaaccountdisconnectevent","text":"Event that is sent when the established session for an account is dropped on the server side. A new session must be authorized for the account. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_ACCOUNT_DISCONNECT_EVENT ctidTraderAccountId int64 required The unique identifier of the trader's account in cTrader platform.","title":"ProtoOAAccountDisconnectEvent"},{"location":"messages/#protooaaccountlogoutreq","text":"Request for logout of trading account session. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_ACCOUNT_LOGOUT_REQ ctidTraderAccountId int64 required The unique identifier of the trader's account in cTrader platform.","title":"ProtoOAAccountLogoutReq"},{"location":"messages/#protooaaccountlogoutres","text":"Response to the ProtoOATraderLogoutReq request. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_ACCOUNT_LOGOUT_RES ctidTraderAccountId int64 required The unique identifier of the trader's account in cTrader platform.","title":"ProtoOAAccountLogoutRes"},{"location":"messages/#protooaaccountstokeninvalidatedevent","text":"Event that is sent when a session to a specific trader's account is terminated by the server but the existing connections with the other trader's accounts are maintained. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_ACCOUNTS_TOKEN_INVALIDATED_EVENT ctidTraderAccountIds int64 repeated The unique identifier of the trader's account in cTrader platform. reason string optional The disconnection reason explained. For example: Access Token is expired or recalled.","title":"ProtoOAAccountsTokenInvalidatedEvent"},{"location":"messages/#protooaamendorderreq","text":"Request for amending the existing pending order. Allowed only if the Access Token has \"trade\" permissions for the trading account. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_AMEND_ORDER_REQ ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts. orderId int64 required The unique ID of the order. volume int64 optional Volume, represented in 0.01 of a unit (e.g. cents). limitPrice double optional The Limit Price, can be specified for the LIMIT order only. stopPrice double optional The Stop Price, can be specified for the STOP and the STOP_LIMIT orders. expirationTimestamp int64 optional The exact Order expiration time. Should be set for the Good Till Date orders. stopLoss double optional The absolute Stop Loss price (e.g. 1.23456). Not supported for the MARKER orders. takeProfit double optional The absolute Take Profit price (e.g. 1.23456). Not supported for the MARKER orders. slippageInPoints int32 optional Slippage distance for the MARKET_RANGE and the STOP_LIMIT orders. relativeStopLoss int64 optional The relative Stop Loss can be specified instead of the absolute one. Specified in 1/100000 of a unit of price. For BUY stopLoss = entryPrice - relativeStopLoss, for SELL stopLoss = entryPrice + relativeStopLoss. relativeTakeProfit int64 optional The relative Take Profit can be specified instead of the absolute one. Specified in 1/100000 of a unit of price. For BUY takeProfit = entryPrice + relativeTakeProfit, for SELL takeProfit = entryPrice - relativeTakeProfit. guaranteedStopLoss bool optional If TRUE then the Stop Loss is guaranteed. Available for the French Risk or the Guaranteed Stop Loss Accounts. trailingStopLoss bool optional If TRUE then the Trailing Stop Loss is applied. stopTriggerMethod ProtoOAOrderTriggerMethod optional Trigger method for the STOP or the STOP_LIMIT pending order. Default: TRADE","title":"ProtoOAAmendOrderReq"},{"location":"messages/#protooaamendpositionsltpreq","text":"Request for amending StopLoss and TakeProfit of existing position. Allowed only if the accessToken has \"trade\" permissions for the trading account. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_AMEND_POSITION_SLTP_REQ ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts. positionId int64 required The unique ID of the position to amend. stopLoss double optional Absolute Stop Loss price (1.23456 for example). takeProfit double optional Absolute Take Profit price (1.26543 for example). guaranteedStopLoss bool optional If TRUE then the Stop Loss is guaranteed. Available for the French Risk or the Guaranteed Stop Loss Accounts. trailingStopLoss bool optional If TRUE then the Trailing Stop Loss is applied. stopLossTriggerMethod ProtoOAOrderTriggerMethod optional The Stop trigger method for the Stop Loss/Take Profit order. Default: TRADE","title":"ProtoOAAmendPositionSLTPReq"},{"location":"messages/#protooaapplicationauthreq","text":"Request for the authorizing an application to work with the cTrader platform Proxies. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_APPLICATION_AUTH_REQ clientId string required The unique Client ID provided during the registration. clientSecret string required The unique Client Secret provided during the registration.","title":"ProtoOAApplicationAuthReq"},{"location":"messages/#protooaapplicationauthres","text":"Response to the ProtoOAApplicationAuthReq request. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_APPLICATION_AUTH_RES","title":"ProtoOAApplicationAuthRes"},{"location":"messages/#protooaassetclasslistreq","text":"Request for a list of asset classes available for the trader's account. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_ASSET_CLASS_LIST_REQ ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts.","title":"ProtoOAAssetClassListReq"},{"location":"messages/#protooaassetclasslistres","text":"Response to the ProtoOAAssetListReq request. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_ASSET_CLASS_LIST_RES ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts. assetClass ProtoOAAssetClass repeated List of the asset classes.","title":"ProtoOAAssetClassListRes"},{"location":"messages/#protooaassetlistreq","text":"Request for the list of assets available for a trader's account. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_ASSET_LIST_REQ ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts.","title":"ProtoOAAssetListReq"},{"location":"messages/#protooaassetlistres","text":"Response to the ProtoOAAssetListReq request. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_ASSET_LIST_RES ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts. asset ProtoOAAsset repeated The list of assets.","title":"ProtoOAAssetListRes"},{"location":"messages/#protooacancelorderreq","text":"Request for cancelling existing pending order. Allowed only if the accessToken has \"trade\" permissions for the trading account. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_CANCEL_ORDER_REQ ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts. orderId int64 required The unique ID of the order.","title":"ProtoOACancelOrderReq"},{"location":"messages/#protooacashflowhistorylistreq","text":"Request for getting Trader's historical data of deposits and withdrawals. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_CASH_FLOW_HISTORY_LIST_REQ ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts. fromTimestamp int64 required The UNIX time from which the search starts >=0 (1-1-1970). Validation: toTimestamp - fromTimestamp <= 604800000 (1 week). toTimestamp int64 required The UNIX time where to stop searching <= 2147483646000 (19-1-2038).","title":"ProtoOACashFlowHistoryListReq"},{"location":"messages/#protooacashflowhistorylistres","text":"Response to the ProtoOACashFlowHistoryListReq request. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_CASH_FLOW_HISTORY_LIST_RES ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts. depositWithdraw ProtoOADepositWithdraw repeated The list of deposit and withdrawal operations.","title":"ProtoOACashFlowHistoryListRes"},{"location":"messages/#protooaclientdisconnectevent","text":"Event that is sent when the connection with the client application is cancelled by the server. All the sessions for the traders' accounts will be terminated. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_CLIENT_DISCONNECT_EVENT reason string optional The disconnection reason explained. For example: The application access was blocked by cTrader Administrator.","title":"ProtoOAClientDisconnectEvent"},{"location":"messages/#protooaclosepositionreq","text":"Request for closing or partially closing of an existing position. Allowed only if the accessToken has \"trade\" permissions for the trading account. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_CLOSE_POSITION_REQ ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts. positionId int64 required The unique ID of the position to close. volume int64 required Volume to close, represented in 0.01 of a unit (e.g. cents).","title":"ProtoOAClosePositionReq"},{"location":"messages/#protooadeallistreq","text":"Request for getting Trader's deals historical data (execution details). Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_DEAL_LIST_REQ ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts. fromTimestamp int64 required The UNIX time from which the search starts >=0 (1-1-1970). Validation: toTimestamp - fromTimestamp <= 604800000 (1 week). toTimestamp int64 required The UNIX time where to stop searching <= 2147483646000 (19-1-2038). maxRows int32 optional The maximum number of the deals to return.","title":"ProtoOADealListReq"},{"location":"messages/#protooadeallistres","text":"The response to the ProtoOADealListRes request. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_DEAL_LIST_RES ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts. deal ProtoOADeal repeated The list of the deals. hasMore bool required If TRUE then the response will provide more than 10000 deals.","title":"ProtoOADealListRes"},{"location":"messages/#protooadepthevent","text":"Event that is sent when the structure of depth of market is changed. Requires subscription on the depth of markets for the symbol, see ProtoOASubscribeDepthQuotesReq. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_DEPTH_EVENT ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts. symbolId uint64 required Unique identifier of the Symbol in cTrader platform. newQuotes ProtoOADepthQuote repeated The list of changes in the depth of market quotes. deletedQuotes uint64 repeated The list of quotes to delete.","title":"ProtoOADepthEvent"},{"location":"messages/#protooaerrorres","text":"Generic response when an ERROR occurred. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_ERROR_RES ctidTraderAccountId int64 optional The unique identifier of the trader's account in cTrader platform. errorCode string required The name of the ProtoErrorCode or the other custom ErrorCodes (e.g. ProtoCHErrorCode). description string optional The error description. maintenanceEndTimestamp int64 optional The timestamp in seconds when the current maintenance session will be ended.","title":"ProtoOAErrorRes"},{"location":"messages/#protooaexecutionevent","text":"Event that is sent following the successful order acceptance or execution by the server. Acts as response to the ProtoOANewOrderReq, ProtoOACancelOrderReq, ProtoOAAmendOrderReq, ProtoOAAmendPositionSLTPReq, ProtoOAClosePositionReq requests. Also, the event is sent when a Deposit/Withdrawal took place. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_EXECUTION_EVENT ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts. executionType ProtoOAExecutionType required Type of the order operation. For example: ACCEPTED, FILLED, etc. position ProtoOAPosition optional Reference to the position linked with the execution order ProtoOAOrder optional Reference to the initial order. deal ProtoOADeal optional Reference to the deal (execution). bonusDepositWithdraw ProtoOABonusDepositWithdraw optional Reference to the Bonus Deposit or Withdrawal operation. depositWithdraw ProtoOADepositWithdraw optional Reference to the Deposit or Withdrawal operation. errorCode string optional The name of the ProtoErrorCode or the other custom ErrorCodes (e.g. ProtoCHErrorCode). isServerEvent bool optional If TRUE then the event generated by the server logic instead of the trader's request. (e.g. stop-out).","title":"ProtoOAExecutionEvent"},{"location":"messages/#protooaexpectedmarginreq","text":"Request for getting the margin estimate. Can be used before sending a new order request. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_EXPECTED_MARGIN_REQ ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts. symbolId int64 required Unique identifier of the Symbol in cTrader platform. volume int64 repeated Volume represented in 0.01 of a unit (e.g. cents).","title":"ProtoOAExpectedMarginReq"},{"location":"messages/#protooaexpectedmarginres","text":"The response to the ProtoOAExpectedMarginReq request. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_EXPECTED_MARGIN_RES ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts. margin ProtoOAExpectedMargin repeated The buy and sell margin estimate. moneyDigits uint32 optional Specifies the exponent of the monetary values. E.g. moneyDigits = 8 must be interpret as business value multiplied by 10^8, then real balance would be 10053099944 / 10^8 = 100.53099944. Affects margin.buyMargin, margin.sellMargin.","title":"ProtoOAExpectedMarginRes"},{"location":"messages/#protooagetaccountlistbyaccesstokenreq","text":"Request for getting the list of granted trader's account for the access token. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_REQ accessToken string required The Access Token issued for providing access to the Trader's Account.","title":"ProtoOAGetAccountListByAccessTokenReq"},{"location":"messages/#protooagetaccountlistbyaccesstokenres","text":"Response to the ProtoOAGetAccountListByAccessTokenReq request. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_RES accessToken string required The Access Token issued for providing access to the Trader's Account. permissionScope ProtoOAClientPermissionScope optional SCOPE_VIEW, SCOPE_TRADE. ctidTraderAccount ProtoOACtidTraderAccount repeated The list of the accounts.","title":"ProtoOAGetAccountListByAccessTokenRes"},{"location":"messages/#protooagetctidprofilebytokenreq","text":"Request for getting details of Trader's profile. Limited due to GDRP requirements. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_REQ accessToken string required The Access Token issued for providing access to the Trader's Account.","title":"ProtoOAGetCtidProfileByTokenReq"},{"location":"messages/#protooagetctidprofilebytokenres","text":"Response to the ProtoOAGetCtidProfileByTokenReq request. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_RES profile ProtoOACtidProfile required Trader's profile.","title":"ProtoOAGetCtidProfileByTokenRes"},{"location":"messages/#protooagettickdatareq","text":"Request for getting historical tick data for the symbol. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_GET_TICKDATA_REQ ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts. symbolId int64 required Unique identifier of the Symbol in cTrader platform. type ProtoOAQuoteType required Bid/Ask (\u00bd). fromTimestamp int64 required The exact time of starting the search in milliseconds. Must be bigger of equal to zero (1-1-1970). Validation: toTimestamp - fromTimestamp <= 604800000 (1 week). toTimestamp int64 required The exact time of finishing the search in milliseconds <= 2147483646000 (19-1-2038).","title":"ProtoOAGetTickDataReq"},{"location":"messages/#protooagettickdatares","text":"Response to the ProtoOAGetTickDataReq request. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_GET_TICKDATA_RES ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts. tickData ProtoOATickData repeated The list of ticks. hasMore bool required If TRUE then the number of records by filter is larger than chunkSize, the response contains the number of records that is equal to chunkSize.","title":"ProtoOAGetTickDataRes"},{"location":"messages/#protooagettrendbarsreq","text":"Request for getting historical trend bars for the symbol. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_GET_TRENDBARS_REQ ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts. fromTimestamp int64 required The exact time of starting the search in milliseconds. Must be bigger or equal to zero (1-1-1970). Validation: toTimestamp - fromTimestamp <= X, where X depends on series period: M1, M2, M3, M4, M5: 302400000 (5 weeks); M10, M15, M30, H1: 21168000000 (35 weeks), H4, H12, D1: 31622400000 (1 year); W1, MN1: 158112000000 (5 years). toTimestamp int64 required The exact time of finishing the search in milliseconds. Smaller or equal to 2147483646000 (19-1-2038). period ProtoOATrendbarPeriod required Specifies period of trend bar series (e.g. M1, M10, etc.). symbolId int64 required Unique identifier of the Symbol in cTrader platform.","title":"ProtoOAGetTrendbarsReq"},{"location":"messages/#protooagettrendbarsres","text":"Response to the ProtoOAGetTrendbarsReq request. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_GET_TRENDBARS_RES ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts. period ProtoOATrendbarPeriod required Specifies period of trend bar series (e.g. M1, M10, etc.). timestamp int64 required Equals to toTimestamp from the request. trendbar ProtoOATrendbar repeated The list of trend bars. symbolId int64 optional Unique identifier of the Symbol in cTrader platform.","title":"ProtoOAGetTrendbarsRes"},{"location":"messages/#protooamargincalllistreq","text":"Request for a list of existing margin call thresholds configured for a user. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_MARGIN_CALL_LIST_REQ ctidTraderAccountId int64 required","title":"ProtoOAMarginCallListReq"},{"location":"messages/#protooamargincalllistres","text":"Response with a list of existing user Margin Calls, usually contains 3 items. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_MARGIN_CALL_LIST_RES marginCall ProtoOAMarginCall repeated","title":"ProtoOAMarginCallListRes"},{"location":"messages/#protooamargincalltriggerevent","text":"Event that is sent when account margin level reaches target marginLevelThreshold. Event is sent no more than once every 10 minutes to avoid spamming. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_MARGIN_CALL_TRIGGER_EVENT ctidTraderAccountId int64 required marginCall ProtoOAMarginCall required","title":"ProtoOAMarginCallTriggerEvent"},{"location":"messages/#protooamargincallupdateevent","text":"Event that is sent when a Margin Call threshold configuration is updated. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_MARGIN_CALL_UPDATE_EVENT ctidTraderAccountId int64 required marginCall ProtoOAMarginCall required","title":"ProtoOAMarginCallUpdateEvent"},{"location":"messages/#protooamargincallupdatereq","text":"Request to modify marginLevelThreshold of specified marginCallType for ctidTraderAccountId. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_MARGIN_CALL_UPDATE_REQ ctidTraderAccountId int64 required marginCall ProtoOAMarginCall required","title":"ProtoOAMarginCallUpdateReq"},{"location":"messages/#protooamargincallupdateres","text":"If this response received, it means that margin call was successfully updated. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_MARGIN_CALL_UPDATE_RES","title":"ProtoOAMarginCallUpdateRes"},{"location":"messages/#protooamarginchangedevent","text":"Event that is sent when the margin allocated to a specific position is changed. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_MARGIN_CHANGED_EVENT ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts. positionId uint64 required The unique ID of the position. usedMargin uint64 required The new value of the margin used. moneyDigits uint32 optional Specifies the exponent of the monetary values. E.g. moneyDigits = 8 must be interpret as business value multiplied by 10^8, then real balance would be 10053099944 / 10^8 = 100.53099944. Affects usedMargin.","title":"ProtoOAMarginChangedEvent"},{"location":"messages/#protooaneworderreq","text":"Request for sending a new trading order. Allowed only if the accessToken has the \"trade\" permissions for the trading account. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_NEW_ORDER_REQ ctidTraderAccountId int64 required The unique identifier of the trader's account in cTrader platform. symbolId int64 required The unique identifier of a symbol in cTrader platform. orderType ProtoOAOrderType required The type of an order - MARKET, LIMIT, STOP, MARKET_RANGE, STOP_LIMIT. tradeSide ProtoOATradeSide required The trade direction - BUY or SELL. volume int64 required The volume represented in 0.01 of a unit (e.g. US$ 10.00 = 1000). limitPrice double optional The limit price, can be specified for the LIMIT order only. stopPrice double optional Stop Price, can be specified for the STOP and the STOP_LIMIT orders only. timeInForce ProtoOATimeInForce optional The specific order execution or expiration instruction - GOOD_TILL_DATE, GOOD_TILL_CANCEL, IMMEDIATE_OR_CANCEL, FILL_OR_KILL, MARKET_ON_OPEN. Default: GOOD_TILL_CANCEL expirationTimestamp int64 optional The exact Order expiration time. Should be set for the Good Till Date orders. stopLoss double optional The absolute Stop Loss price (1.23456 for example). Not supported for the MARKER orders. takeProfit double optional The absolute Take Profit price (1.23456 for example). Unsupported for the MARKER orders. comment string optional User-specified comment. MaxLength = 512. baseSlippagePrice double optional Base price to calculate relative slippage price for MARKET_RANGE order. slippageInPoints int32 optional Slippage distance for MARKET_RANGE and STOP_LIMIT order. label string optional User-specified label. MaxLength = 100. positionId int64 optional Reference to the existing position if the Order is intended to modify it. clientOrderId string optional Optional user-specific clientOrderId (similar to FIX ClOrderID). MaxLength = 50. relativeStopLoss int64 optional Relative Stop Loss that can be specified instead of the absolute as one. Specified in 1/100000 of unit of a price. For BUY stopLoss = entryPrice - relativeStopLoss, for SELL stopLoss = entryPrice + relativeStopLoss. relativeTakeProfit int64 optional Relative Take Profit that can be specified instead of the absolute one. Specified in 1/100000 of unit of a price. For BUY takeProfit = entryPrice + relativeTakeProfit, for SELL takeProfit = entryPrice - relativeTakeProfit. guaranteedStopLoss bool optional If TRUE then stopLoss is guaranteed. Available for the French Risk or the Guaranteed Stop Loss Accounts. trailingStopLoss bool optional If TRUE then the Stop Loss is Trailing. stopTriggerMethod ProtoOAOrderTriggerMethod optional Trigger method for the STOP or the STOP_LIMIT pending order. Default: TRADE","title":"ProtoOANewOrderReq"},{"location":"messages/#protooaordererrorevent","text":"Event that is sent when errors occur during the order requests. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_ORDER_ERROR_EVENT ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts. errorCode string required The name of the ProtoErrorCode or the other custom ErrorCodes (e.g. ProtoCHErrorCode). orderId int64 optional The unique ID of the order. positionId int64 optional The unique ID of the position. description string optional The error description.","title":"ProtoOAOrderErrorEvent"},{"location":"messages/#protooareconcilereq","text":"Request for getting Trader's current open positions and pending orders data. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_RECONCILE_REQ ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts.","title":"ProtoOAReconcileReq"},{"location":"messages/#protooareconcileres","text":"The response to the ProtoOAReconcileReq request. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_RECONCILE_RES ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts. position ProtoOAPosition repeated The list of trader's account open positions. order ProtoOAOrder repeated The list of trader's account pending orders.","title":"ProtoOAReconcileRes"},{"location":"messages/#protooarefreshtokenreq","text":"Request to refresh the access token using refresh token of granted trader's account. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_REFRESH_TOKEN_REQ refreshToken string required The Refresh Token issued for updating Access Token.","title":"ProtoOARefreshTokenReq"},{"location":"messages/#protooarefreshtokenres","text":"Response to the ProtoOARefreshTokenReq request. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_REFRESH_TOKEN_RES accessToken string required The Access Token issued for providing access to the Trader's Account. tokenType string required bearer expiresIn int64 required Access Token expiration in seconds refreshToken string required","title":"ProtoOARefreshTokenRes"},{"location":"messages/#protooaspotevent","text":"Event that is sent when a new spot event is generated on the server side. Requires subscription on the spot events, see ProtoOASubscribeSpotsReq. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_SPOT_EVENT ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts. symbolId int64 required Unique identifier of the Symbol in cTrader platform. bid uint64 optional Bid price. Specified in 1/100_000 of unit of a price. (e.g. 1.23 -> 123_000) ask uint64 optional Ask price. Specified in 1/100_000 of unit of a price. trendbar ProtoOATrendbar repeated Returns live trend bar. Requires subscription on the trend bars. sessionClose uint64 optional Last session close. Specified in 1/100_000 of unit of a price.","title":"ProtoOASpotEvent"},{"location":"messages/#protooasubscribedepthquotesreq","text":"Request for subscribing on depth of market of the specified symbol. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_REQ ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts. symbolId int64 repeated Unique identifier of the Symbol in cTrader platform.","title":"ProtoOASubscribeDepthQuotesReq"},{"location":"messages/#protooasubscribedepthquotesres","text":"Response to the ProtoOASubscribeDepthQuotesReq request. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_RES ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts.","title":"ProtoOASubscribeDepthQuotesRes"},{"location":"messages/#protooasubscribelivetrendbarreq","text":"Request for subscribing for live trend bars. Requires subscription on the spot events, see ProtoOASubscribeSpotsReq. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_SUBSCRIBE_LIVE_TRENDBAR_REQ ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts. period ProtoOATrendbarPeriod required Specifies period of trend bar series (e.g. M1, M10, etc.). symbolId int64 required Unique identifier of the Symbol in cTrader platform.","title":"ProtoOASubscribeLiveTrendbarReq"},{"location":"messages/#protooasubscribelivetrendbarres","text":"Response to the ProtoOASubscribeLiveTrendbarReq request. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_SUBSCRIBE_LIVE_TRENDBAR_RES ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts.","title":"ProtoOASubscribeLiveTrendbarRes"},{"location":"messages/#protooasubscribespotsreq","text":"Request for subscribing on spot events of the specified symbol. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_SUBSCRIBE_SPOTS_REQ ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts. symbolId int64 repeated Unique identifier of the Symbol in cTrader platform.","title":"ProtoOASubscribeSpotsReq"},{"location":"messages/#protooasubscribespotsres","text":"Response to the ProtoOASubscribeSpotsReq request. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_SUBSCRIBE_SPOTS_RES ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts.","title":"ProtoOASubscribeSpotsRes"},{"location":"messages/#protooasymbolbyidreq","text":"Request for getting a full symbol entity. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_SYMBOL_BY_ID_REQ ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts. symbolId int64 repeated Unique identifier of the symbol in cTrader platform.","title":"ProtoOASymbolByIdReq"},{"location":"messages/#protooasymbolbyidres","text":"Response to the ProtoOASymbolByIdReq request. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_SYMBOL_BY_ID_RES ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts. symbol ProtoOASymbol repeated Symbol entity with the full set of fields. archivedSymbol ProtoOAArchivedSymbol repeated Archived symbols.","title":"ProtoOASymbolByIdRes"},{"location":"messages/#protooasymbolcategorylistreq","text":"Request for a list of symbol categories available for a trading account. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_SYMBOL_CATEGORY_REQ ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts.","title":"ProtoOASymbolCategoryListReq"},{"location":"messages/#protooasymbolcategorylistres","text":"Response to the ProtoSymbolCategoryListReq request. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_SYMBOL_CATEGORY_RES ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts. symbolCategory ProtoOASymbolCategory repeated The list of symbol categories.","title":"ProtoOASymbolCategoryListRes"},{"location":"messages/#protooasymbolchangedevent","text":"Event that is sent when the symbol is changed on the Server side. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_SYMBOL_CHANGED_EVENT ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts. symbolId int64 repeated Unique identifier of the Symbol in cTrader platform.","title":"ProtoOASymbolChangedEvent"},{"location":"messages/#protooasymbolsforconversionreq","text":"Request for getting a conversion chain between two assets that consists of several symbols. Use when no direct quote is available Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_SYMBOLS_FOR_CONVERSION_REQ ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts. firstAssetId int64 required The ID of the firs asset in the conversation chain. e.g.: for EUR/USD the firstAssetId is EUR ID and lastAssetId is USD ID. lastAssetId int64 required The ID of the last asset in the conversation chain. e.g.: for EUR/USD the firstAssetId is EUR ID and lastAssetId is USD ID.","title":"ProtoOASymbolsForConversionReq"},{"location":"messages/#protooasymbolsforconversionres","text":"Response to the ProtoOASymbolsForConversionReq request. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_SYMBOLS_FOR_CONVERSION_RES ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts. symbol ProtoOALightSymbol repeated Conversion chain of the symbols (e.g. EUR/USD, USD/JPY, GBP/JPY -> EUR/GBP).","title":"ProtoOASymbolsForConversionRes"},{"location":"messages/#protooasymbolslistreq","text":"Request for a list of symbols available for a trading account. Symbol entries are returned with the limited set of fields. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_SYMBOLS_LIST_REQ ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts. includeArchivedSymbols bool optional Default: false","title":"ProtoOASymbolsListReq"},{"location":"messages/#protooasymbolslistres","text":"Response to the ProtoOASymbolsListReq request. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_SYMBOLS_LIST_RES ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts. symbol ProtoOALightSymbol repeated The list of symbols. archivedSymbol ProtoOAArchivedSymbol repeated The list of archived symbols.","title":"ProtoOASymbolsListRes"},{"location":"messages/#protooatraderreq","text":"Request for getting data of Trader's Account. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_TRADER_REQ ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts.","title":"ProtoOATraderReq"},{"location":"messages/#protooatraderres","text":"Response to the ProtoOATraderReq request. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_TRADER_RES ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts. trader ProtoOATrader required The Trader account information.","title":"ProtoOATraderRes"},{"location":"messages/#protooatraderupdatedevent","text":"Event that is sent when a Trader is updated on Server side. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_TRADER_UPDATE_EVENT ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts. trader ProtoOATrader required The Trader account information.","title":"ProtoOATraderUpdatedEvent"},{"location":"messages/#protooatrailingslchangedevent","text":"Event that is sent when the level of the Trailing Stop Loss is changed due to the price level changes. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_TRAILING_SL_CHANGED_EVENT ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts. positionId int64 required The unique ID of the position. orderId int64 required The unique ID of the order. stopPrice double required New value of the Stop Loss price. utcLastUpdateTimestamp int64 required The exact UTC time when the Stop Loss was updated.","title":"ProtoOATrailingSLChangedEvent"},{"location":"messages/#protooaunsubscribedepthquotesreq","text":"Request for unsubscribing from the depth of market of the specified symbol. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_REQ ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts. symbolId int64 repeated Unique identifier of the Symbol in cTrader platform.","title":"ProtoOAUnsubscribeDepthQuotesReq"},{"location":"messages/#protooaunsubscribedepthquotesres","text":"Response to the ProtoOAUnsubscribeDepthQuotesReq request. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_RES ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts.","title":"ProtoOAUnsubscribeDepthQuotesRes"},{"location":"messages/#protooaunsubscribelivetrendbarreq","text":"Request for unsubscribing from the live trend bars. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_UNSUBSCRIBE_LIVE_TRENDBAR_REQ ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts. period ProtoOATrendbarPeriod required Specifies period of trend bar series (e.g. M1, M10, etc.). symbolId int64 required Unique identifier of the Symbol in cTrader platform.","title":"ProtoOAUnsubscribeLiveTrendbarReq"},{"location":"messages/#protooaunsubscribelivetrendbarres","text":"Response to the ProtoOASubscribeLiveTrendbarReq request. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_UNSUBSCRIBE_LIVE_TRENDBAR_RES ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts.","title":"ProtoOAUnsubscribeLiveTrendbarRes"},{"location":"messages/#protooaunsubscribespotsreq","text":"Request for unsubscribing from the spot events of the specified symbol. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_UNSUBSCRIBE_SPOTS_REQ ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts. symbolId int64 repeated Unique identifier of the Symbol in cTrader platform.","title":"ProtoOAUnsubscribeSpotsReq"},{"location":"messages/#protooaunsubscribespotsres","text":"Response to the ProtoOASubscribeSpotsRes request. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_UNSUBSCRIBE_SPOTS_RES ctidTraderAccountId int64 required Unique identifier of the trader's account. Used to match responses to trader's accounts.","title":"ProtoOAUnsubscribeSpotsRes"},{"location":"messages/#protooaversionreq","text":"Request for getting the proxy version. Can be used to check the current version of the Open API scheme. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_VERSION_REQ","title":"ProtoOAVersionReq"},{"location":"messages/#protooaversionres","text":"Response to the ProtoOAVersionReq request. Field Type Label Description payloadType ProtoOAPayloadType optional Default: PROTO_OA_VERSION_RES version string required The current version of the server application.","title":"ProtoOAVersionRes"},{"location":"models/","text":"Models \u00b6 Top ProtoOAArchivedSymbol \u00b6 Field Type Label Description symbolId int64 required name string required utcLastUpdateTimestamp int64 required description string optional ProtoOAAsset \u00b6 Asset entity. Field Type Label Description assetId int64 required The unique asset ID. name string required The asset name. displayName string optional User friendly name. digits int32 optional Precision of the asset. ProtoOAAssetClass \u00b6 Asset class entity. Field Type Label Description id int64 optional Unique asset ID. name string optional Asset class name. ProtoOABonusDepositWithdraw \u00b6 Bonus deposit/withdrawal entity. Field Type Label Description operationType ProtoOAChangeBonusType required Type of the operation. Deposit/Withdrawal. bonusHistoryId int64 required The unique ID of the bonus deposit/withdrawal operation. managerBonus int64 required Total amount of broker's bonus after the operation. managerDelta int64 required Amount of bonus deposited/withdrew by manager. ibBonus int64 required Total amount of introducing broker's bonus after the operation. ibDelta int64 required Amount of bonus deposited/withdrew by introducing broker. changeBonusTimestamp int64 required Time when the bonus operation was executed. externalNote string optional Note added to operation. Visible to the trader. introducingBrokerId int64 optional ID of introducing broker who deposited/withdrew bonus. moneyDigits uint32 optional Specifies the exponent of the monetary values. E.g. moneyDigits = 8 must be interpret as business value multiplied by 10^8, then real balance would be 10053099944 / 10^8 = 100.53099944. Affects managerBonus, managerDelta, ibBonus, ibDelta. ProtoOAClosePositionDetail \u00b6 Trading details for closing deal. Field Type Label Description entryPrice double required Position price at the moment of filling the closing order. grossProfit int64 required Amount of realized gross profit after closing deal execution. swap int64 required Amount of realized swap related to closed volume. commission int64 required Amount of realized commission related to closed volume. balance int64 required Account balance after closing deal execution. quoteToDepositConversionRate double optional Quote/Deposit currency conversion rate on the time of closing deal execution. closedVolume int64 optional Closed volume in cents. balanceVersion int64 optional Balance version of the account related to closing deal operation. moneyDigits uint32 optional Specifies the exponent of the monetary values. E.g. moneyDigits = 8 must be interpret as business value multiplied by 10^8, then real balance would be 10053099944 / 10^8 = 100.53099944. Affects grossProfit, swap, commission, balance. ProtoOACtidProfile \u00b6 Trader profile entity. Empty due to GDPR. Field Type Label Description userId int64 required ProtoOACtidTraderAccount \u00b6 Trader account entity. Field Type Label Description ctidTraderAccountId uint64 required Unique identifier of the trader's account. Used to match responses to trader's accounts.cTrader platform. Different brokers might have different ids isLive bool optional If TRUE then the account is belong to Live environment and live host must be used to authorize it traderLogin int64 optional TraderLogin for a specific account. Value is displayed on Client App UI lastClosingDealTimestamp int64 optional lastBalanceUpdateTimestamp int64 optional ProtoOADeal \u00b6 Execution entity. Field Type Label Description dealId int64 required The unique ID of the execution deal. orderId int64 required Source order of the deal. positionId int64 required Source position of the deal. volume int64 required Volume sent for execution, in cents. filledVolume int64 required Filled volume, in cents. symbolId int64 required The unique identifier of the symbol in specific server environment within cTrader platform. Different servers have different IDs. createTimestamp int64 required Time when the deal was sent for execution. executionTimestamp int64 required Time when the deal was executed. utcLastUpdateTimestamp int64 optional Timestamp when the deal was created, executed or rejected. executionPrice double optional Execution price. tradeSide ProtoOATradeSide required Buy/Sell. dealStatus ProtoOADealStatus required Status of the deal. marginRate double optional Rate for used margin computation. Represented as Base/Deposit. commission int64 optional Amount of trading commission associated with the deal. baseToUsdConversionRate double optional Base to USD conversion rate on the time of deal execution. closePositionDetail ProtoOAClosePositionDetail optional Closing position detail. Valid only for closing deal. moneyDigits uint32 optional Specifies the exponent of the monetary values. E.g. moneyDigits = 8 must be interpret as business value multiplied by 10^8, then real balance would be 10053099944 / 10^8 = 100.53099944. Affects commission. ProtoOADepositWithdraw \u00b6 Account deposit/withdrawal operation entity. Field Type Label Description operationType ProtoOAChangeBalanceType required Type of the operation. Deposit/Withdrawal. balanceHistoryId int64 required The unique ID of the deposit/withdrawal operation. balance int64 required Account balance after the operation was executed. delta int64 required Amount of deposit/withdrawal operation. changeBalanceTimestamp int64 required Time when deposit/withdrawal operation was executed. externalNote string optional Note added to operation. Visible to the trader. balanceVersion int64 optional Balance version used to identify the final balance. Increments each time when the trader's account balance is changed. equity int64 optional Total account's equity after balance operation was executed. moneyDigits uint32 optional Specifies the exponent of the monetary values. E.g. moneyDigits = 8 must be interpret as business value multiplied by 10^8, then real balance would be 10053099944 / 10^8 = 100.53099944. Affects balance, delta, equity. ProtoOADepthQuote \u00b6 Depth of market entity. Field Type Label Description id uint64 required Quote ID. size uint64 required Quote size in cents. bid uint64 optional Bid price for bid quotes. ask uint64 optional Ask price for ask quotes. ProtoOAExpectedMargin \u00b6 Expected margin computation entity. Field Type Label Description volume int64 required Volume in cents used for computation of expected margin. buyMargin int64 required Buy margin amount. sellMargin int64 required Sell margin amount. ProtoOAHoliday \u00b6 Field Type Label Description holidayId int64 required Unique ID of holiday. name string required Name of holiday. description string optional Description of holiday. scheduleTimeZone string required Timezone used for holiday. holidayDate int64 required Amount of days from 01-01-1970, multiply it by 86400000 to get unix timestamp. isRecurring bool required If TRUE, then the holiday happens each year. startSecond int32 optional Amount of seconds from 00:00:00 of the holiday day when holiday actually starts. endSecond int32 optional Amount of seconds from 00:00:00 of the holiday day when holiday actually finishes. ProtoOAInterval \u00b6 Symbol trading session entity. Field Type Label Description startSecond uint32 required Interval start, specified in seconds starting from SUNDAY 00:00 in specified time zone (inclusive to the interval). endSecond uint32 required Interval end, specified in seconds starting from SUNDAY 00:00 in specified time zone (exclusive from the interval). ProtoOALightSymbol \u00b6 Lightweight symbol entity. Field Type Label Description symbolId int64 required The unique identifier of the symbol in specific server environment within cTrader platform. Different brokers might have different IDs. symbolName string optional Name of the symbol (e.g. EUR/USD). enabled bool optional If TRUE then symbol is visible for traders. baseAssetId int64 optional Base asset. quoteAssetId int64 optional Quote asset. symbolCategoryId int64 optional Id of the symbol category used for symbols grouping. description string optional ProtoOAMarginCall \u00b6 Margin call entity, specifies threshold for exact margin call type. Only 3 instances of margin calls are supported, identified by marginCallType. See ProtoOANotificationType for details. Field Type Label Description marginCallType ProtoOANotificationType required marginLevelThreshold double required utcLastUpdateTimestamp int64 optional ProtoOAOrder \u00b6 Trade order entity. Field Type Label Description orderId int64 required The unique ID of the order. Note: trader might have two orders with the same id if orders are taken from accounts from different brokers. tradeData ProtoOATradeData required Detailed trader data. orderType ProtoOAOrderType required Order type. orderStatus ProtoOAOrderStatus required Order status. expirationTimestamp int64 optional If the order has time in force GTD then expiration is specified. executionPrice double optional Price at which an order was executed. For order with FILLED status. executedVolume int64 optional Part of the volume that was filled. utcLastUpdateTimestamp int64 optional Timestamp of the last update of the order. baseSlippagePrice double optional Used for Market Range order with combination of slippageInPoints to specify price range were order can be executed. slippageInPoints int64 optional Used for Market Range and STOP_LIMIT orders to to specify price range were order can be executed. closingOrder bool optional If TRUE then the order is closing part of whole position. Must have specified positionId. limitPrice double optional Valid only for LIMIT orders. stopPrice double optional Valid only for STOP and STOP_LIMIT orders. stopLoss double optional Absolute stopLoss price. takeProfit double optional Absolute takeProfit price. clientOrderId string optional Optional ClientOrderId. Max Length = 50 chars. timeInForce ProtoOATimeInForce optional Order's time in force. Depends on order type. Default: IMMEDIATE_OR_CANCEL positionId int64 optional ID of the position linked to the order (e.g. closing order, order that increase volume of a specific position, etc.). relativeStopLoss int64 optional Relative stopLoss that can be specified instead of absolute as one. Specified in 1/100_000 of unit of a price. For BUY stopLoss = entryPrice - relativeStopLoss, for SELL stopLoss = entryPrice + relativeStopLoss. relativeTakeProfit int64 optional Relative takeProfit that can be specified instead of absolute one. Specified in 1/100_000 of unit of a price. ForBUY takeProfit = entryPrice + relativeTakeProfit, for SELL takeProfit = entryPrice - relativeTakeProfit. isStopOut bool optional If TRUE then order was stopped out from server side. trailingStopLoss bool optional If TRUE then order is trailingStopLoss. Valid for STOP_LOSS_TAKE_PROFIT order. stopTriggerMethod ProtoOAOrderTriggerMethod optional Trigger method for the order. Valid only for STOP and STOP_LIMIT orders. Default: TRADE ProtoOAPosition \u00b6 Trade position entity. Field Type Label Description positionId int64 required The unique ID of the position. Note: trader might have two positions with the same id if positions are taken from accounts from different brokers. tradeData ProtoOATradeData required Position details. See ProtoOATradeData for details. positionStatus ProtoOAPositionStatus required Current status of the position. swap int64 required Total amount of charged swap on open position. price double optional VWAP price of the position based on all executions (orders) linked to the position. stopLoss double optional Current stop loss price. takeProfit double optional Current take profit price. utcLastUpdateTimestamp int64 optional Time of the last change of the position, including amend SL/TP of the position, execution of related order, cancel or related order, etc. commission int64 optional Current unrealized commission related to the position. marginRate double optional Rate for used margin computation. Represented as Base/Deposit. mirroringCommission int64 optional Amount of unrealized commission related to following of strategy provider. guaranteedStopLoss bool optional If TRUE then position's stop loss is guaranteedStopLoss. usedMargin uint64 optional Amount of margin used for the position in deposit currency. stopLossTriggerMethod ProtoOAOrderTriggerMethod optional Stop trigger method for SL/TP of the position. Default: TRADE moneyDigits uint32 optional Specifies the exponent of the monetary values. E.g. moneyDigits = 8 must be interpret as business value multiplied by 10^8, then real balance would be 10053099944 / 10^8 = 100.53099944. Affects swap, commission, mirroringCommission, usedMargin. ProtoOASymbol \u00b6 Trading symbol entity. Field Type Label Description symbolId int64 required The unique identifier of the symbol in specific server environment within cTrader platform. Different servers have different IDs. digits int32 required Number of price digits to be displayed. pipPosition int32 required Pip position on digits. enableShortSelling bool optional If TRUE then the short selling with the symbol is enabled. guaranteedStopLoss bool optional If TRUE then setting of guaranteedStopLoss is available for limited risk accounts. swapRollover3Days ProtoOADayOfWeek optional Day of the week when SWAP charge amount will be tripled. Doesn't impact Rollover Commission. Default: MONDAY swapLong double optional SWAP charge for long positions. swapShort double optional SWAP charge for short positions. maxVolume int64 optional Maximum allowed volume in cents for an order with a symbol. minVolume int64 optional Minimum allowed volume in cents for an order with a symbol. stepVolume int64 optional Step of the volume in cents for an order. maxExposure uint64 optional Value of max exposure per symbol, per account. Blocks execution if breached. schedule ProtoOAInterval repeated Symbol trading interval, specified in seconds starting from SUNDAY 00:00 in specified time zone. commission int64 optional Deprecated. Commission base amount. Total commission depends on commissionType. Use preciseTradingCommissionRate. commissionType ProtoOACommissionType optional Commission type. See ProtoOACommissionType for details. Default: USD_PER_MILLION_USD slDistance uint32 optional Minimum allowed distance between stop loss and current market price. tpDistance uint32 optional Minimum allowed distance between take profit and current market price. gslDistance uint32 optional Minimum allowed distance between guaranteed stop loss and current market price. gslCharge int64 optional Guaranteed stop loss fee. distanceSetIn ProtoOASymbolDistanceType optional Unit of distance measure for slDistance, tpDistance, gslDistance. Default: SYMBOL_DISTANCE_IN_POINTS minCommission int64 optional Deprecated. Minimum commission amount per trade. Use preciseMinCommission. minCommissionType ProtoOAMinCommissionType optional Minimum commission Type. See ProtoOAMinCommissionType for details. Default: CURRENCY minCommissionAsset string optional Currency for minimum commission. (USD or quote currency). Default: USD rolloverCommission int64 optional Amount of commission per trade for Shariah Compliant accounts in deposit currency (swapFree = TRUE). skipRolloverDays int32 optional Initial period before the first rolloverCommission will be charged on the account. scheduleTimeZone string optional Time zone for the symbol trading intervals. tradingMode ProtoOATradingMode optional Rules for trading with the symbol. See ProtoOATradingMode for details. Default: ENABLED rolloverCommission3Days ProtoOADayOfWeek optional Day of the week (in UTC) when Administrative Fee charge amount will be tripled. Applied only if RolloverChargePeriod = 0 or 1 Default: MONDAY swapCalculationType ProtoOASwapCalculationType optional Specifies type of SWAP computation as PIPS (0) or PERCENTAGE (1, annual, in percent) Default: PIPS lotSize int64 optional Lot size of the Symbol (in cents) preciseTradingCommissionRate int64 optional Commission base amount. Total commission depends on commissionType: for non-percentage types it is multiplied by 10^8. preciseMinCommission int64 optional Minimum commission amount per trade multiplied by 10^8. holiday ProtoOAHoliday repeated List of holidays for this symbol specified by broker. ProtoOASymbolCategory \u00b6 Symbol category entity. Field Type Label Description id int64 required The unique identifier of the symbol category. assetClassId int64 required Link to the asset class. One asset class can have many symbol categories. name string required Category name. ProtoOATickData \u00b6 Historical tick data type. Field Type Label Description timestamp int64 required Tick timestamp. tick int64 required Tick price. ProtoOATradeData \u00b6 Position/order trading details entity. Field Type Label Description symbolId int64 required The unique identifier of the symbol in specific server environment within cTrader platform. Different brokers might have different IDs. volume int64 required Volume in cents. tradeSide ProtoOATradeSide required Buy, Sell. openTimestamp int64 optional Time when position was opened or order was created. label string optional Text label specified during order request. guaranteedStopLoss bool optional If TRUE then position/order stop loss is guaranteedStopLoss. comment string optional User-specified comment. ProtoOATrader \u00b6 Trading account entity. Field Type Label Description ctidTraderAccountId int64 required The unique Trader's Account ID used to match the responses to the Trader's Account. balance int64 required Current account balance. balanceVersion int64 optional Balance version used to identify the final balance. Increments each time when the trader's account balance is changed. managerBonus int64 optional Amount of broker's bonus allocated to the account. ibBonus int64 optional Amount of introducing broker bonus allocated to the account. nonWithdrawableBonus int64 optional Broker's bonus that cannot be withdrew from the account as cash. accessRights ProtoOAAccessRights optional Access rights that an owner has to the account in cTrader platform. See ProtoOAAccessRights for details. Default: FULL_ACCESS depositAssetId int64 required Deposit currency of the account. swapFree bool optional If TRUE then account is Shariah compliant. leverageInCents uint32 optional Account leverage (e.g. If leverage = 1:50 then value = 5000). totalMarginCalculationType ProtoOATotalMarginCalculationType optional Margin computation type for the account (MAX, SUM, NET). maxLeverage uint32 optional Maximum allowed leverage for the account. Used as validation when a Trader can change leverage value. frenchRisk bool optional Deprecated. If TRUE then account is AMF compliant. Use isLimitedRisk and limitedRiskMarginCalculationStrategy. traderLogin int64 optional ID of the account that is unique per server (Broker). accountType ProtoOAAccountType optional Account type: HEDGED, NETTED, etc. Default: HEDGED brokerName string optional Some whitelabel assigned to trader by broker at the moment of account creation. registrationTimestamp int64 optional Unix timestamp of the account registration. Should be used as minimal date in historical data requests. isLimitedRisk bool optional If TRUE then account is compliant to use specific margin calculation strategy. limitedRiskMarginCalculationStrategy ProtoOALimitedRiskMarginCalculationStrategy optional Special strategy used in margin calculations for this account (if account isLimitedRisk). Default: ACCORDING_TO_LEVERAGE moneyDigits uint32 optional Specifies the exponent of the monetary values. E.g. moneyDigits = 8 must be interpret as business value multiplied by 10^8, then real balance would be 10053099944 / 10^8 = 100.53099944. Affects balance, managerBonus, ibBonus, nonWithdrawableBonus. ProtoOATrendbar \u00b6 Historical Trendbar entity. Field Type Label Description volume int64 required Bar volume in ticks. period ProtoOATrendbarPeriod optional Bar period. Default: M1 low int64 optional Low price of the bar. deltaOpen uint64 optional Delta between open and low price. open = low + deltaOpen. deltaClose uint64 optional Delta between close and low price. close = low + deltaClose. deltaHigh uint64 optional Delta between high and low price. high = low + deltaHigh. utcTimestampInMinutes uint32 optional Timestamp of the bar. Equal to the timestamp of the open tick. ProtoOAAccessRights \u00b6 Enum for specifying access right for a trader. Name Number Description FULL_ACCESS 0 Enable all trading. CLOSE_ONLY 1 Only closing trading request are enabled. NO_TRADING 2 View only access. NO_LOGIN 3 No access. ProtoOAAccountType \u00b6 Enum for specifying type of an account. Name Number Description HEDGED 0 Allows multiple positions on a trading account for a symbol. NETTED 1 Only one position per symbol is allowed on a trading account. SPREAD_BETTING 2 Spread betting type account. ProtoOAChangeBalanceType \u00b6 Balance operation entity. Covers all cash movement operations related to account, trading, IB operations, mirroring, etc. Name Number Description BALANCE_DEPOSIT 0 Cash deposit. BALANCE_WITHDRAW 1 Cash withdrawal. BALANCE_DEPOSIT_STRATEGY_COMMISSION_INNER 3 Received mirroring commission. BALANCE_WITHDRAW_STRATEGY_COMMISSION_INNER 4 Paid mirroring commission. BALANCE_DEPOSIT_IB_COMMISSIONS 5 For IB account. Commissions paid by trader. BALANCE_WITHDRAW_IB_SHARED_PERCENTAGE 6 For IB account. Withdrawal of commissions shared with broker. BALANCE_DEPOSIT_IB_SHARED_PERCENTAGE_FROM_SUB_IB 7 For IB account. Commissions paid by sub-ibs. BALANCE_DEPOSIT_IB_SHARED_PERCENTAGE_FROM_BROKER 8 For IB account. Commissions paid by broker. BALANCE_DEPOSIT_REBATE 9 Deposit rebate for trading volume for period. BALANCE_WITHDRAW_REBATE 10 Withdrawal of rebate. BALANCE_DEPOSIT_STRATEGY_COMMISSION_OUTER 11 Mirroring commission. BALANCE_WITHDRAW_STRATEGY_COMMISSION_OUTER 12 Mirroring commission. BALANCE_WITHDRAW_BONUS_COMPENSATION 13 For IB account. Share commission with the Broker. BALANCE_WITHDRAW_IB_SHARED_PERCENTAGE_TO_BROKER 14 IB commissions. BALANCE_DEPOSIT_DIVIDENDS 15 Deposit dividends payments. BALANCE_WITHDRAW_DIVIDENDS 16 Negative dividend charge for short position. BALANCE_WITHDRAW_GSL_CHARGE 17 Charge for guaranteedStopLoss. BALANCE_WITHDRAW_ROLLOVER 18 Charge of rollover fee for Shariah compliant accounts. BALANCE_DEPOSIT_NONWITHDRAWABLE_BONUS 19 Broker's operation to deposit bonus. BALANCE_WITHDRAW_NONWITHDRAWABLE_BONUS 20 Broker's operation to withdrawal bonus. BALANCE_DEPOSIT_SWAP 21 Deposits of negative SWAP. BALANCE_WITHDRAW_SWAP 22 SWAP charges. BALANCE_DEPOSIT_MANAGEMENT_FEE 27 Mirroring commission. BALANCE_WITHDRAW_MANAGEMENT_FEE 28 Mirroring commission. Deprecated since 7.1 in favor of BALANCE_WITHDRAW_COPY_FEE (34). BALANCE_DEPOSIT_PERFORMANCE_FEE 29 Mirroring commission. BALANCE_WITHDRAW_FOR_SUBACCOUNT 30 BALANCE_DEPOSIT_TO_SUBACCOUNT 31 BALANCE_WITHDRAW_FROM_SUBACCOUNT 32 BALANCE_DEPOSIT_FROM_SUBACCOUNT 33 BALANCE_WITHDRAW_COPY_FEE 34 Withdrawal fees to Strategy Provider. BALANCE_WITHDRAW_INACTIVITY_FEE 35 Withdraw of inactivity fee from the balance BALANCE_DEPOSIT_TRANSFER 36 BALANCE_WITHDRAW_TRANSFER 37 BALANCE_DEPOSIT_CONVERTED_BONUS 38 BALANCE_DEPOSIT_NEGATIVE_BALANCE_PROTECTION 39 ProtoOAChangeBonusType \u00b6 Bonus operation type ENUM. Name Number Description BONUS_DEPOSIT 0 BONUS_WITHDRAW 1 ProtoOAClientPermissionScope \u00b6 Open API application permission in regards to token ENUM. Name Number Description SCOPE_VIEW 0 Allows to use only view commends. Trade is prohibited. SCOPE_TRADE 1 Allows to use all commands. ProtoOACommissionType \u00b6 Enum for specifying type of trading commission. Name Number Description USD_PER_MILLION_USD 1 USD per million USD volume - usually used for FX. Example: 50 USD for 1 mil USD of trading volume. USD_PER_LOT 2 USD per 1 lot - usually used for CFDs and futures for commodities, and indices. Example: 15 USD for 1 contract. PERCENTAGE_OF_VALUE 3 Percentage of trading volume - usually used for Equities. Example: 0.005% of notional trading volume. Multiplied by 100,00. QUOTE_CCY_PER_LOT 4 Quote ccy of Symbol per 1 lot - will be used for CFDs and futures for commodities, and indices. Example: 15 EUR for 1 contract of DAX. ProtoOADayOfWeek \u00b6 Name Number Description NONE 0 MONDAY 1 TUESDAY 2 WEDNESDAY 3 THURSDAY 4 FRIDAY 5 SATURDAY 6 SUNDAY 7 ProtoOADealStatus \u00b6 Deal status ENUM. Name Number Description FILLED 2 Deal filled. PARTIALLY_FILLED 3 Deal is partially filled. REJECTED 4 Deal is correct but was rejected by liquidity provider (e.g. no liquidity). INTERNALLY_REJECTED 5 Deal rejected by server (e.g. no price quotes). ERROR 6 Deal is rejected by LP due to error (e.g. symbol is unknown). MISSED 7 Liquidity provider did not sent response on the deal during specified execution time period. ProtoOAErrorCode \u00b6 Error code ENUM. Name Number Description OA_AUTH_TOKEN_EXPIRED 1 When token used for account authorization is expired. ACCOUNT_NOT_AUTHORIZED 2 When account is not authorized. ALREADY_LOGGED_IN 14 When client tries to authorize after it was already authorized CH_CLIENT_AUTH_FAILURE 101 Open API client is not activated or wrong client credentials. CH_CLIENT_NOT_AUTHENTICATED 102 When a command is sent for not authorized Open API client. CH_CLIENT_ALREADY_AUTHENTICATED 103 Client is trying to authenticate twice. CH_ACCESS_TOKEN_INVALID 104 Access token is invalid. CH_SERVER_NOT_REACHABLE 105 Trading service is not available. CH_CTID_TRADER_ACCOUNT_NOT_FOUND 106 Trading account is not found. CH_OA_CLIENT_NOT_FOUND 107 Could not find this client id. REQUEST_FREQUENCY_EXCEEDED 108 Request frequency is reached. SERVER_IS_UNDER_MAINTENANCE 109 Server is under maintenance. CHANNEL_IS_BLOCKED 110 Operations are not allowed for this account. CONNECTIONS_LIMIT_EXCEEDED 67 Limit of connections is reached for this Open API client. WORSE_GSL_NOT_ALLOWED 68 Not allowed to increase risk for Positions with Guaranteed Stop Loss. SYMBOL_HAS_HOLIDAY 69 Trading disabled because symbol has holiday. NOT_SUBSCRIBED_TO_SPOTS 112 When trying to subscribe to depth, trendbars, etc. without spot subscription. ALREADY_SUBSCRIBED 113 When subscription is requested for an active. SYMBOL_NOT_FOUND 114 Symbol not found. UNKNOWN_SYMBOL 115 Note: to be merged with SYMBOL_NOT_FOUND. INCORRECT_BOUNDARIES 35 When requested period (from,to) is too large or invalid values are set to from/to. NO_QUOTES 117 Trading cannot be done as not quotes are available. Applicable for Book B. NOT_ENOUGH_MONEY 118 Not enough funds to allocate margin. MAX_EXPOSURE_REACHED 119 Max exposure limit is reached for a {trader, symbol, side}. POSITION_NOT_FOUND 120 Position not found. ORDER_NOT_FOUND 121 Order not found. POSITION_NOT_OPEN 122 When trying to close a position that it is not open. POSITION_LOCKED 123 Position in the state that does not allow to perform an operation. TOO_MANY_POSITIONS 124 Trading account reached its limit for max number of open positions and orders. TRADING_BAD_VOLUME 125 Invalid volume. TRADING_BAD_STOPS 126 Invalid stop price. TRADING_BAD_PRICES 127 Invalid price (e.g. negative). TRADING_BAD_STAKE 128 Invalid stake volume (e.g. negative). PROTECTION_IS_TOO_CLOSE_TO_MARKET 129 Invalid protection prices. TRADING_BAD_EXPIRATION_DATE 130 Invalid expiration. PENDING_EXECUTION 131 Unable to apply changes as position has an order under execution. TRADING_DISABLED 132 Trading is blocked for the symbol. TRADING_NOT_ALLOWED 133 Trading account is in read only mode. UNABLE_TO_CANCEL_ORDER 134 Unable to cancel order. UNABLE_TO_AMEND_ORDER 135 Unable to amend order. SHORT_SELLING_NOT_ALLOWED 136 Short selling is not allowed. ProtoOAExecutionType \u00b6 Execution event type ENUM. Name Number Description ORDER_ACCEPTED 2 Order passed validation. ORDER_FILLED 3 Order filled. ORDER_REPLACED 4 Pending order is changed with a new one. ORDER_CANCELLED 5 Order cancelled. ORDER_EXPIRED 6 Order with GTD time in force is expired. ORDER_REJECTED 7 Order is rejected due to validations. ORDER_CANCEL_REJECTED 8 Cancel order request is rejected. SWAP 9 Type related to SWAP execution events. DEPOSIT_WITHDRAW 10 Type related to event of deposit or withdrawal cash flow operation. ORDER_PARTIAL_FILL 11 Order is partially filled. BONUS_DEPOSIT_WITHDRAW 12 Type related to event of bonus deposit or bonus withdrawal. ProtoOALimitedRiskMarginCalculationStrategy \u00b6 Name Number Description ACCORDING_TO_LEVERAGE 0 ACCORDING_TO_GSL 1 ACCORDING_TO_GSL_AND_LEVERAGE 2 ProtoOAMinCommissionType \u00b6 Enum for specifying type of minimum trading commission. Name Number Description CURRENCY 1 QUOTE_CURRENCY 2 ProtoOANotificationType \u00b6 Type of notification, currently only 3 instances of marginCall are supported. Name Number Description MARGIN_LEVEL_THRESHOLD_1 61 one of three margin calls, they are all similar. MARGIN_LEVEL_THRESHOLD_2 62 one of three margin calls, they are all similar. MARGIN_LEVEL_THRESHOLD_3 63 one of three margin calls, they are all similar. ProtoOAOrderStatus \u00b6 Order status ENUM. Name Number Description ORDER_STATUS_ACCEPTED 1 Order request validated and accepted for execution. ORDER_STATUS_FILLED 2 Order is fully filled. ORDER_STATUS_REJECTED 3 Order is rejected due to validation. ORDER_STATUS_EXPIRED 4 Order expired. Might be valid for orders with partially filled volume that were expired on LP. ORDER_STATUS_CANCELLED 5 Order is cancelled. Might be valid for orders with partially filled volume that were cancelled by LP. ProtoOAOrderTriggerMethod \u00b6 Stop Order and Stop Lost triggering method ENUM. Name Number Description TRADE 1 Stop Order: buy is triggered by ask, sell by bid; Stop Loss Order: for buy position is triggered by bid and for sell position by ask. OPPOSITE 2 Stop Order: buy is triggered by bid, sell by ask; Stop Loss Order: for buy position is triggered by ask and for sell position by bid. DOUBLE_TRADE 3 The same as TRADE, but trigger is checked after the second consecutive tick. DOUBLE_OPPOSITE 4 The same as OPPOSITE, but trigger is checked after the second consecutive tick. ProtoOAOrderType \u00b6 Order type ENUM. Name Number Description MARKET 1 LIMIT 2 STOP 3 STOP_LOSS_TAKE_PROFIT 4 MARKET_RANGE 5 STOP_LIMIT 6 ProtoOAPayloadType \u00b6 Name Number Description PROTO_OA_APPLICATION_AUTH_REQ 2100 PROTO_OA_APPLICATION_AUTH_RES 2101 PROTO_OA_ACCOUNT_AUTH_REQ 2102 PROTO_OA_ACCOUNT_AUTH_RES 2103 PROTO_OA_VERSION_REQ 2104 PROTO_OA_VERSION_RES 2105 PROTO_OA_NEW_ORDER_REQ 2106 PROTO_OA_TRAILING_SL_CHANGED_EVENT 2107 PROTO_OA_CANCEL_ORDER_REQ 2108 PROTO_OA_AMEND_ORDER_REQ 2109 PROTO_OA_AMEND_POSITION_SLTP_REQ 2110 PROTO_OA_CLOSE_POSITION_REQ 2111 PROTO_OA_ASSET_LIST_REQ 2112 PROTO_OA_ASSET_LIST_RES 2113 PROTO_OA_SYMBOLS_LIST_REQ 2114 PROTO_OA_SYMBOLS_LIST_RES 2115 PROTO_OA_SYMBOL_BY_ID_REQ 2116 PROTO_OA_SYMBOL_BY_ID_RES 2117 PROTO_OA_SYMBOLS_FOR_CONVERSION_REQ 2118 PROTO_OA_SYMBOLS_FOR_CONVERSION_RES 2119 PROTO_OA_SYMBOL_CHANGED_EVENT 2120 PROTO_OA_TRADER_REQ 2121 PROTO_OA_TRADER_RES 2122 PROTO_OA_TRADER_UPDATE_EVENT 2123 PROTO_OA_RECONCILE_REQ 2124 PROTO_OA_RECONCILE_RES 2125 PROTO_OA_EXECUTION_EVENT 2126 PROTO_OA_SUBSCRIBE_SPOTS_REQ 2127 PROTO_OA_SUBSCRIBE_SPOTS_RES 2128 PROTO_OA_UNSUBSCRIBE_SPOTS_REQ 2129 PROTO_OA_UNSUBSCRIBE_SPOTS_RES 2130 PROTO_OA_SPOT_EVENT 2131 PROTO_OA_ORDER_ERROR_EVENT 2132 PROTO_OA_DEAL_LIST_REQ 2133 PROTO_OA_DEAL_LIST_RES 2134 PROTO_OA_SUBSCRIBE_LIVE_TRENDBAR_REQ 2135 PROTO_OA_UNSUBSCRIBE_LIVE_TRENDBAR_REQ 2136 PROTO_OA_GET_TRENDBARS_REQ 2137 PROTO_OA_GET_TRENDBARS_RES 2138 PROTO_OA_EXPECTED_MARGIN_REQ 2139 PROTO_OA_EXPECTED_MARGIN_RES 2140 PROTO_OA_MARGIN_CHANGED_EVENT 2141 PROTO_OA_ERROR_RES 2142 PROTO_OA_CASH_FLOW_HISTORY_LIST_REQ 2143 PROTO_OA_CASH_FLOW_HISTORY_LIST_RES 2144 PROTO_OA_GET_TICKDATA_REQ 2145 PROTO_OA_GET_TICKDATA_RES 2146 PROTO_OA_ACCOUNTS_TOKEN_INVALIDATED_EVENT 2147 PROTO_OA_CLIENT_DISCONNECT_EVENT 2148 PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_REQ 2149 PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_RES 2150 PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_REQ 2151 PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_RES 2152 PROTO_OA_ASSET_CLASS_LIST_REQ 2153 PROTO_OA_ASSET_CLASS_LIST_RES 2154 PROTO_OA_DEPTH_EVENT 2155 PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_REQ 2156 PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_RES 2157 PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_REQ 2158 PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_RES 2159 PROTO_OA_SYMBOL_CATEGORY_REQ 2160 PROTO_OA_SYMBOL_CATEGORY_RES 2161 PROTO_OA_ACCOUNT_LOGOUT_REQ 2162 PROTO_OA_ACCOUNT_LOGOUT_RES 2163 PROTO_OA_ACCOUNT_DISCONNECT_EVENT 2164 PROTO_OA_SUBSCRIBE_LIVE_TRENDBAR_RES 2165 PROTO_OA_UNSUBSCRIBE_LIVE_TRENDBAR_RES 2166 PROTO_OA_MARGIN_CALL_LIST_REQ 2167 PROTO_OA_MARGIN_CALL_LIST_RES 2168 PROTO_OA_MARGIN_CALL_UPDATE_REQ 2169 PROTO_OA_MARGIN_CALL_UPDATE_RES 2170 PROTO_OA_MARGIN_CALL_UPDATE_EVENT 2171 PROTO_OA_MARGIN_CALL_TRIGGER_EVENT 2172 PROTO_OA_REFRESH_TOKEN_REQ 2173 PROTO_OA_REFRESH_TOKEN_RES 2174 ProtoOAPositionStatus \u00b6 Position status ENUM. Name Number Description POSITION_STATUS_OPEN 1 POSITION_STATUS_CLOSED 2 POSITION_STATUS_CREATED 3 Empty position is created for pending order. POSITION_STATUS_ERROR 4 ProtoOAQuoteType \u00b6 Price quote type. Name Number Description BID 1 ASK 2 ProtoOASwapCalculationType \u00b6 Enum for specifying SWAP calculation type for symbol. Name Number Description PIPS 0 Specifies type of SWAP computation as PIPS (0) PERCENTAGE 1 Specifies type of SWAP computation as PERCENTAGE (1, annual, in percent) ProtoOASymbolDistanceType \u00b6 Enum for specifying stop loss and take profit distances. Name Number Description SYMBOL_DISTANCE_IN_POINTS 1 SYMBOL_DISTANCE_IN_PERCENTAGE 2 ProtoOATimeInForce \u00b6 Order's time in force ENUM. Name Number Description GOOD_TILL_DATE 1 GOOD_TILL_CANCEL 2 IMMEDIATE_OR_CANCEL 3 FILL_OR_KILL 4 MARKET_ON_OPEN 5 ProtoOATotalMarginCalculationType \u00b6 Enum for specifying margin calculation type for an account. Name Number Description MAX 0 SUM 1 NET 2 ProtoOATradeSide \u00b6 Trader side ENUM. Used for order, position, deal. Name Number Description BUY 1 SELL 2 ProtoOATradingMode \u00b6 Enum for specifying symbol trading mode. Name Number Description ENABLED 0 DISABLED_WITHOUT_PENDINGS_EXECUTION 1 DISABLED_WITH_PENDINGS_EXECUTION 2 CLOSE_ONLY_MODE 3 ProtoOATrendbarPeriod \u00b6 Trendbar period ENUM. Name Number Description M1 1 M2 2 M3 3 M4 4 M5 5 M10 6 M15 7 M30 8 H1 9 H4 10 H12 11 D1 12 W1 13 MN1 14","title":"Models"},{"location":"models/#models","text":"Top","title":"Models"},{"location":"models/#protooaarchivedsymbol","text":"Field Type Label Description symbolId int64 required name string required utcLastUpdateTimestamp int64 required description string optional","title":"ProtoOAArchivedSymbol"},{"location":"models/#protooaasset","text":"Asset entity. Field Type Label Description assetId int64 required The unique asset ID. name string required The asset name. displayName string optional User friendly name. digits int32 optional Precision of the asset.","title":"ProtoOAAsset"},{"location":"models/#protooaassetclass","text":"Asset class entity. Field Type Label Description id int64 optional Unique asset ID. name string optional Asset class name.","title":"ProtoOAAssetClass"},{"location":"models/#protooabonusdepositwithdraw","text":"Bonus deposit/withdrawal entity. Field Type Label Description operationType ProtoOAChangeBonusType required Type of the operation. Deposit/Withdrawal. bonusHistoryId int64 required The unique ID of the bonus deposit/withdrawal operation. managerBonus int64 required Total amount of broker's bonus after the operation. managerDelta int64 required Amount of bonus deposited/withdrew by manager. ibBonus int64 required Total amount of introducing broker's bonus after the operation. ibDelta int64 required Amount of bonus deposited/withdrew by introducing broker. changeBonusTimestamp int64 required Time when the bonus operation was executed. externalNote string optional Note added to operation. Visible to the trader. introducingBrokerId int64 optional ID of introducing broker who deposited/withdrew bonus. moneyDigits uint32 optional Specifies the exponent of the monetary values. E.g. moneyDigits = 8 must be interpret as business value multiplied by 10^8, then real balance would be 10053099944 / 10^8 = 100.53099944. Affects managerBonus, managerDelta, ibBonus, ibDelta.","title":"ProtoOABonusDepositWithdraw"},{"location":"models/#protooaclosepositiondetail","text":"Trading details for closing deal. Field Type Label Description entryPrice double required Position price at the moment of filling the closing order. grossProfit int64 required Amount of realized gross profit after closing deal execution. swap int64 required Amount of realized swap related to closed volume. commission int64 required Amount of realized commission related to closed volume. balance int64 required Account balance after closing deal execution. quoteToDepositConversionRate double optional Quote/Deposit currency conversion rate on the time of closing deal execution. closedVolume int64 optional Closed volume in cents. balanceVersion int64 optional Balance version of the account related to closing deal operation. moneyDigits uint32 optional Specifies the exponent of the monetary values. E.g. moneyDigits = 8 must be interpret as business value multiplied by 10^8, then real balance would be 10053099944 / 10^8 = 100.53099944. Affects grossProfit, swap, commission, balance.","title":"ProtoOAClosePositionDetail"},{"location":"models/#protooactidprofile","text":"Trader profile entity. Empty due to GDPR. Field Type Label Description userId int64 required","title":"ProtoOACtidProfile"},{"location":"models/#protooactidtraderaccount","text":"Trader account entity. Field Type Label Description ctidTraderAccountId uint64 required Unique identifier of the trader's account. Used to match responses to trader's accounts.cTrader platform. Different brokers might have different ids isLive bool optional If TRUE then the account is belong to Live environment and live host must be used to authorize it traderLogin int64 optional TraderLogin for a specific account. Value is displayed on Client App UI lastClosingDealTimestamp int64 optional lastBalanceUpdateTimestamp int64 optional","title":"ProtoOACtidTraderAccount"},{"location":"models/#protooadeal","text":"Execution entity. Field Type Label Description dealId int64 required The unique ID of the execution deal. orderId int64 required Source order of the deal. positionId int64 required Source position of the deal. volume int64 required Volume sent for execution, in cents. filledVolume int64 required Filled volume, in cents. symbolId int64 required The unique identifier of the symbol in specific server environment within cTrader platform. Different servers have different IDs. createTimestamp int64 required Time when the deal was sent for execution. executionTimestamp int64 required Time when the deal was executed. utcLastUpdateTimestamp int64 optional Timestamp when the deal was created, executed or rejected. executionPrice double optional Execution price. tradeSide ProtoOATradeSide required Buy/Sell. dealStatus ProtoOADealStatus required Status of the deal. marginRate double optional Rate for used margin computation. Represented as Base/Deposit. commission int64 optional Amount of trading commission associated with the deal. baseToUsdConversionRate double optional Base to USD conversion rate on the time of deal execution. closePositionDetail ProtoOAClosePositionDetail optional Closing position detail. Valid only for closing deal. moneyDigits uint32 optional Specifies the exponent of the monetary values. E.g. moneyDigits = 8 must be interpret as business value multiplied by 10^8, then real balance would be 10053099944 / 10^8 = 100.53099944. Affects commission.","title":"ProtoOADeal"},{"location":"models/#protooadepositwithdraw","text":"Account deposit/withdrawal operation entity. Field Type Label Description operationType ProtoOAChangeBalanceType required Type of the operation. Deposit/Withdrawal. balanceHistoryId int64 required The unique ID of the deposit/withdrawal operation. balance int64 required Account balance after the operation was executed. delta int64 required Amount of deposit/withdrawal operation. changeBalanceTimestamp int64 required Time when deposit/withdrawal operation was executed. externalNote string optional Note added to operation. Visible to the trader. balanceVersion int64 optional Balance version used to identify the final balance. Increments each time when the trader's account balance is changed. equity int64 optional Total account's equity after balance operation was executed. moneyDigits uint32 optional Specifies the exponent of the monetary values. E.g. moneyDigits = 8 must be interpret as business value multiplied by 10^8, then real balance would be 10053099944 / 10^8 = 100.53099944. Affects balance, delta, equity.","title":"ProtoOADepositWithdraw"},{"location":"models/#protooadepthquote","text":"Depth of market entity. Field Type Label Description id uint64 required Quote ID. size uint64 required Quote size in cents. bid uint64 optional Bid price for bid quotes. ask uint64 optional Ask price for ask quotes.","title":"ProtoOADepthQuote"},{"location":"models/#protooaexpectedmargin","text":"Expected margin computation entity. Field Type Label Description volume int64 required Volume in cents used for computation of expected margin. buyMargin int64 required Buy margin amount. sellMargin int64 required Sell margin amount.","title":"ProtoOAExpectedMargin"},{"location":"models/#protooaholiday","text":"Field Type Label Description holidayId int64 required Unique ID of holiday. name string required Name of holiday. description string optional Description of holiday. scheduleTimeZone string required Timezone used for holiday. holidayDate int64 required Amount of days from 01-01-1970, multiply it by 86400000 to get unix timestamp. isRecurring bool required If TRUE, then the holiday happens each year. startSecond int32 optional Amount of seconds from 00:00:00 of the holiday day when holiday actually starts. endSecond int32 optional Amount of seconds from 00:00:00 of the holiday day when holiday actually finishes.","title":"ProtoOAHoliday"},{"location":"models/#protooainterval","text":"Symbol trading session entity. Field Type Label Description startSecond uint32 required Interval start, specified in seconds starting from SUNDAY 00:00 in specified time zone (inclusive to the interval). endSecond uint32 required Interval end, specified in seconds starting from SUNDAY 00:00 in specified time zone (exclusive from the interval).","title":"ProtoOAInterval"},{"location":"models/#protooalightsymbol","text":"Lightweight symbol entity. Field Type Label Description symbolId int64 required The unique identifier of the symbol in specific server environment within cTrader platform. Different brokers might have different IDs. symbolName string optional Name of the symbol (e.g. EUR/USD). enabled bool optional If TRUE then symbol is visible for traders. baseAssetId int64 optional Base asset. quoteAssetId int64 optional Quote asset. symbolCategoryId int64 optional Id of the symbol category used for symbols grouping. description string optional","title":"ProtoOALightSymbol"},{"location":"models/#protooamargincall","text":"Margin call entity, specifies threshold for exact margin call type. Only 3 instances of margin calls are supported, identified by marginCallType. See ProtoOANotificationType for details. Field Type Label Description marginCallType ProtoOANotificationType required marginLevelThreshold double required utcLastUpdateTimestamp int64 optional","title":"ProtoOAMarginCall"},{"location":"models/#protooaorder","text":"Trade order entity. Field Type Label Description orderId int64 required The unique ID of the order. Note: trader might have two orders with the same id if orders are taken from accounts from different brokers. tradeData ProtoOATradeData required Detailed trader data. orderType ProtoOAOrderType required Order type. orderStatus ProtoOAOrderStatus required Order status. expirationTimestamp int64 optional If the order has time in force GTD then expiration is specified. executionPrice double optional Price at which an order was executed. For order with FILLED status. executedVolume int64 optional Part of the volume that was filled. utcLastUpdateTimestamp int64 optional Timestamp of the last update of the order. baseSlippagePrice double optional Used for Market Range order with combination of slippageInPoints to specify price range were order can be executed. slippageInPoints int64 optional Used for Market Range and STOP_LIMIT orders to to specify price range were order can be executed. closingOrder bool optional If TRUE then the order is closing part of whole position. Must have specified positionId. limitPrice double optional Valid only for LIMIT orders. stopPrice double optional Valid only for STOP and STOP_LIMIT orders. stopLoss double optional Absolute stopLoss price. takeProfit double optional Absolute takeProfit price. clientOrderId string optional Optional ClientOrderId. Max Length = 50 chars. timeInForce ProtoOATimeInForce optional Order's time in force. Depends on order type. Default: IMMEDIATE_OR_CANCEL positionId int64 optional ID of the position linked to the order (e.g. closing order, order that increase volume of a specific position, etc.). relativeStopLoss int64 optional Relative stopLoss that can be specified instead of absolute as one. Specified in 1/100_000 of unit of a price. For BUY stopLoss = entryPrice - relativeStopLoss, for SELL stopLoss = entryPrice + relativeStopLoss. relativeTakeProfit int64 optional Relative takeProfit that can be specified instead of absolute one. Specified in 1/100_000 of unit of a price. ForBUY takeProfit = entryPrice + relativeTakeProfit, for SELL takeProfit = entryPrice - relativeTakeProfit. isStopOut bool optional If TRUE then order was stopped out from server side. trailingStopLoss bool optional If TRUE then order is trailingStopLoss. Valid for STOP_LOSS_TAKE_PROFIT order. stopTriggerMethod ProtoOAOrderTriggerMethod optional Trigger method for the order. Valid only for STOP and STOP_LIMIT orders. Default: TRADE","title":"ProtoOAOrder"},{"location":"models/#protooaposition","text":"Trade position entity. Field Type Label Description positionId int64 required The unique ID of the position. Note: trader might have two positions with the same id if positions are taken from accounts from different brokers. tradeData ProtoOATradeData required Position details. See ProtoOATradeData for details. positionStatus ProtoOAPositionStatus required Current status of the position. swap int64 required Total amount of charged swap on open position. price double optional VWAP price of the position based on all executions (orders) linked to the position. stopLoss double optional Current stop loss price. takeProfit double optional Current take profit price. utcLastUpdateTimestamp int64 optional Time of the last change of the position, including amend SL/TP of the position, execution of related order, cancel or related order, etc. commission int64 optional Current unrealized commission related to the position. marginRate double optional Rate for used margin computation. Represented as Base/Deposit. mirroringCommission int64 optional Amount of unrealized commission related to following of strategy provider. guaranteedStopLoss bool optional If TRUE then position's stop loss is guaranteedStopLoss. usedMargin uint64 optional Amount of margin used for the position in deposit currency. stopLossTriggerMethod ProtoOAOrderTriggerMethod optional Stop trigger method for SL/TP of the position. Default: TRADE moneyDigits uint32 optional Specifies the exponent of the monetary values. E.g. moneyDigits = 8 must be interpret as business value multiplied by 10^8, then real balance would be 10053099944 / 10^8 = 100.53099944. Affects swap, commission, mirroringCommission, usedMargin.","title":"ProtoOAPosition"},{"location":"models/#protooasymbol","text":"Trading symbol entity. Field Type Label Description symbolId int64 required The unique identifier of the symbol in specific server environment within cTrader platform. Different servers have different IDs. digits int32 required Number of price digits to be displayed. pipPosition int32 required Pip position on digits. enableShortSelling bool optional If TRUE then the short selling with the symbol is enabled. guaranteedStopLoss bool optional If TRUE then setting of guaranteedStopLoss is available for limited risk accounts. swapRollover3Days ProtoOADayOfWeek optional Day of the week when SWAP charge amount will be tripled. Doesn't impact Rollover Commission. Default: MONDAY swapLong double optional SWAP charge for long positions. swapShort double optional SWAP charge for short positions. maxVolume int64 optional Maximum allowed volume in cents for an order with a symbol. minVolume int64 optional Minimum allowed volume in cents for an order with a symbol. stepVolume int64 optional Step of the volume in cents for an order. maxExposure uint64 optional Value of max exposure per symbol, per account. Blocks execution if breached. schedule ProtoOAInterval repeated Symbol trading interval, specified in seconds starting from SUNDAY 00:00 in specified time zone. commission int64 optional Deprecated. Commission base amount. Total commission depends on commissionType. Use preciseTradingCommissionRate. commissionType ProtoOACommissionType optional Commission type. See ProtoOACommissionType for details. Default: USD_PER_MILLION_USD slDistance uint32 optional Minimum allowed distance between stop loss and current market price. tpDistance uint32 optional Minimum allowed distance between take profit and current market price. gslDistance uint32 optional Minimum allowed distance between guaranteed stop loss and current market price. gslCharge int64 optional Guaranteed stop loss fee. distanceSetIn ProtoOASymbolDistanceType optional Unit of distance measure for slDistance, tpDistance, gslDistance. Default: SYMBOL_DISTANCE_IN_POINTS minCommission int64 optional Deprecated. Minimum commission amount per trade. Use preciseMinCommission. minCommissionType ProtoOAMinCommissionType optional Minimum commission Type. See ProtoOAMinCommissionType for details. Default: CURRENCY minCommissionAsset string optional Currency for minimum commission. (USD or quote currency). Default: USD rolloverCommission int64 optional Amount of commission per trade for Shariah Compliant accounts in deposit currency (swapFree = TRUE). skipRolloverDays int32 optional Initial period before the first rolloverCommission will be charged on the account. scheduleTimeZone string optional Time zone for the symbol trading intervals. tradingMode ProtoOATradingMode optional Rules for trading with the symbol. See ProtoOATradingMode for details. Default: ENABLED rolloverCommission3Days ProtoOADayOfWeek optional Day of the week (in UTC) when Administrative Fee charge amount will be tripled. Applied only if RolloverChargePeriod = 0 or 1 Default: MONDAY swapCalculationType ProtoOASwapCalculationType optional Specifies type of SWAP computation as PIPS (0) or PERCENTAGE (1, annual, in percent) Default: PIPS lotSize int64 optional Lot size of the Symbol (in cents) preciseTradingCommissionRate int64 optional Commission base amount. Total commission depends on commissionType: for non-percentage types it is multiplied by 10^8. preciseMinCommission int64 optional Minimum commission amount per trade multiplied by 10^8. holiday ProtoOAHoliday repeated List of holidays for this symbol specified by broker.","title":"ProtoOASymbol"},{"location":"models/#protooasymbolcategory","text":"Symbol category entity. Field Type Label Description id int64 required The unique identifier of the symbol category. assetClassId int64 required Link to the asset class. One asset class can have many symbol categories. name string required Category name.","title":"ProtoOASymbolCategory"},{"location":"models/#protooatickdata","text":"Historical tick data type. Field Type Label Description timestamp int64 required Tick timestamp. tick int64 required Tick price.","title":"ProtoOATickData"},{"location":"models/#protooatradedata","text":"Position/order trading details entity. Field Type Label Description symbolId int64 required The unique identifier of the symbol in specific server environment within cTrader platform. Different brokers might have different IDs. volume int64 required Volume in cents. tradeSide ProtoOATradeSide required Buy, Sell. openTimestamp int64 optional Time when position was opened or order was created. label string optional Text label specified during order request. guaranteedStopLoss bool optional If TRUE then position/order stop loss is guaranteedStopLoss. comment string optional User-specified comment.","title":"ProtoOATradeData"},{"location":"models/#protooatrader","text":"Trading account entity. Field Type Label Description ctidTraderAccountId int64 required The unique Trader's Account ID used to match the responses to the Trader's Account. balance int64 required Current account balance. balanceVersion int64 optional Balance version used to identify the final balance. Increments each time when the trader's account balance is changed. managerBonus int64 optional Amount of broker's bonus allocated to the account. ibBonus int64 optional Amount of introducing broker bonus allocated to the account. nonWithdrawableBonus int64 optional Broker's bonus that cannot be withdrew from the account as cash. accessRights ProtoOAAccessRights optional Access rights that an owner has to the account in cTrader platform. See ProtoOAAccessRights for details. Default: FULL_ACCESS depositAssetId int64 required Deposit currency of the account. swapFree bool optional If TRUE then account is Shariah compliant. leverageInCents uint32 optional Account leverage (e.g. If leverage = 1:50 then value = 5000). totalMarginCalculationType ProtoOATotalMarginCalculationType optional Margin computation type for the account (MAX, SUM, NET). maxLeverage uint32 optional Maximum allowed leverage for the account. Used as validation when a Trader can change leverage value. frenchRisk bool optional Deprecated. If TRUE then account is AMF compliant. Use isLimitedRisk and limitedRiskMarginCalculationStrategy. traderLogin int64 optional ID of the account that is unique per server (Broker). accountType ProtoOAAccountType optional Account type: HEDGED, NETTED, etc. Default: HEDGED brokerName string optional Some whitelabel assigned to trader by broker at the moment of account creation. registrationTimestamp int64 optional Unix timestamp of the account registration. Should be used as minimal date in historical data requests. isLimitedRisk bool optional If TRUE then account is compliant to use specific margin calculation strategy. limitedRiskMarginCalculationStrategy ProtoOALimitedRiskMarginCalculationStrategy optional Special strategy used in margin calculations for this account (if account isLimitedRisk). Default: ACCORDING_TO_LEVERAGE moneyDigits uint32 optional Specifies the exponent of the monetary values. E.g. moneyDigits = 8 must be interpret as business value multiplied by 10^8, then real balance would be 10053099944 / 10^8 = 100.53099944. Affects balance, managerBonus, ibBonus, nonWithdrawableBonus.","title":"ProtoOATrader"},{"location":"models/#protooatrendbar","text":"Historical Trendbar entity. Field Type Label Description volume int64 required Bar volume in ticks. period ProtoOATrendbarPeriod optional Bar period. Default: M1 low int64 optional Low price of the bar. deltaOpen uint64 optional Delta between open and low price. open = low + deltaOpen. deltaClose uint64 optional Delta between close and low price. close = low + deltaClose. deltaHigh uint64 optional Delta between high and low price. high = low + deltaHigh. utcTimestampInMinutes uint32 optional Timestamp of the bar. Equal to the timestamp of the open tick.","title":"ProtoOATrendbar"},{"location":"models/#protooaaccessrights","text":"Enum for specifying access right for a trader. Name Number Description FULL_ACCESS 0 Enable all trading. CLOSE_ONLY 1 Only closing trading request are enabled. NO_TRADING 2 View only access. NO_LOGIN 3 No access.","title":"ProtoOAAccessRights"},{"location":"models/#protooaaccounttype","text":"Enum for specifying type of an account. Name Number Description HEDGED 0 Allows multiple positions on a trading account for a symbol. NETTED 1 Only one position per symbol is allowed on a trading account. SPREAD_BETTING 2 Spread betting type account.","title":"ProtoOAAccountType"},{"location":"models/#protooachangebalancetype","text":"Balance operation entity. Covers all cash movement operations related to account, trading, IB operations, mirroring, etc. Name Number Description BALANCE_DEPOSIT 0 Cash deposit. BALANCE_WITHDRAW 1 Cash withdrawal. BALANCE_DEPOSIT_STRATEGY_COMMISSION_INNER 3 Received mirroring commission. BALANCE_WITHDRAW_STRATEGY_COMMISSION_INNER 4 Paid mirroring commission. BALANCE_DEPOSIT_IB_COMMISSIONS 5 For IB account. Commissions paid by trader. BALANCE_WITHDRAW_IB_SHARED_PERCENTAGE 6 For IB account. Withdrawal of commissions shared with broker. BALANCE_DEPOSIT_IB_SHARED_PERCENTAGE_FROM_SUB_IB 7 For IB account. Commissions paid by sub-ibs. BALANCE_DEPOSIT_IB_SHARED_PERCENTAGE_FROM_BROKER 8 For IB account. Commissions paid by broker. BALANCE_DEPOSIT_REBATE 9 Deposit rebate for trading volume for period. BALANCE_WITHDRAW_REBATE 10 Withdrawal of rebate. BALANCE_DEPOSIT_STRATEGY_COMMISSION_OUTER 11 Mirroring commission. BALANCE_WITHDRAW_STRATEGY_COMMISSION_OUTER 12 Mirroring commission. BALANCE_WITHDRAW_BONUS_COMPENSATION 13 For IB account. Share commission with the Broker. BALANCE_WITHDRAW_IB_SHARED_PERCENTAGE_TO_BROKER 14 IB commissions. BALANCE_DEPOSIT_DIVIDENDS 15 Deposit dividends payments. BALANCE_WITHDRAW_DIVIDENDS 16 Negative dividend charge for short position. BALANCE_WITHDRAW_GSL_CHARGE 17 Charge for guaranteedStopLoss. BALANCE_WITHDRAW_ROLLOVER 18 Charge of rollover fee for Shariah compliant accounts. BALANCE_DEPOSIT_NONWITHDRAWABLE_BONUS 19 Broker's operation to deposit bonus. BALANCE_WITHDRAW_NONWITHDRAWABLE_BONUS 20 Broker's operation to withdrawal bonus. BALANCE_DEPOSIT_SWAP 21 Deposits of negative SWAP. BALANCE_WITHDRAW_SWAP 22 SWAP charges. BALANCE_DEPOSIT_MANAGEMENT_FEE 27 Mirroring commission. BALANCE_WITHDRAW_MANAGEMENT_FEE 28 Mirroring commission. Deprecated since 7.1 in favor of BALANCE_WITHDRAW_COPY_FEE (34). BALANCE_DEPOSIT_PERFORMANCE_FEE 29 Mirroring commission. BALANCE_WITHDRAW_FOR_SUBACCOUNT 30 BALANCE_DEPOSIT_TO_SUBACCOUNT 31 BALANCE_WITHDRAW_FROM_SUBACCOUNT 32 BALANCE_DEPOSIT_FROM_SUBACCOUNT 33 BALANCE_WITHDRAW_COPY_FEE 34 Withdrawal fees to Strategy Provider. BALANCE_WITHDRAW_INACTIVITY_FEE 35 Withdraw of inactivity fee from the balance BALANCE_DEPOSIT_TRANSFER 36 BALANCE_WITHDRAW_TRANSFER 37 BALANCE_DEPOSIT_CONVERTED_BONUS 38 BALANCE_DEPOSIT_NEGATIVE_BALANCE_PROTECTION 39","title":"ProtoOAChangeBalanceType"},{"location":"models/#protooachangebonustype","text":"Bonus operation type ENUM. Name Number Description BONUS_DEPOSIT 0 BONUS_WITHDRAW 1","title":"ProtoOAChangeBonusType"},{"location":"models/#protooaclientpermissionscope","text":"Open API application permission in regards to token ENUM. Name Number Description SCOPE_VIEW 0 Allows to use only view commends. Trade is prohibited. SCOPE_TRADE 1 Allows to use all commands.","title":"ProtoOAClientPermissionScope"},{"location":"models/#protooacommissiontype","text":"Enum for specifying type of trading commission. Name Number Description USD_PER_MILLION_USD 1 USD per million USD volume - usually used for FX. Example: 50 USD for 1 mil USD of trading volume. USD_PER_LOT 2 USD per 1 lot - usually used for CFDs and futures for commodities, and indices. Example: 15 USD for 1 contract. PERCENTAGE_OF_VALUE 3 Percentage of trading volume - usually used for Equities. Example: 0.005% of notional trading volume. Multiplied by 100,00. QUOTE_CCY_PER_LOT 4 Quote ccy of Symbol per 1 lot - will be used for CFDs and futures for commodities, and indices. Example: 15 EUR for 1 contract of DAX.","title":"ProtoOACommissionType"},{"location":"models/#protooadayofweek","text":"Name Number Description NONE 0 MONDAY 1 TUESDAY 2 WEDNESDAY 3 THURSDAY 4 FRIDAY 5 SATURDAY 6 SUNDAY 7","title":"ProtoOADayOfWeek"},{"location":"models/#protooadealstatus","text":"Deal status ENUM. Name Number Description FILLED 2 Deal filled. PARTIALLY_FILLED 3 Deal is partially filled. REJECTED 4 Deal is correct but was rejected by liquidity provider (e.g. no liquidity). INTERNALLY_REJECTED 5 Deal rejected by server (e.g. no price quotes). ERROR 6 Deal is rejected by LP due to error (e.g. symbol is unknown). MISSED 7 Liquidity provider did not sent response on the deal during specified execution time period.","title":"ProtoOADealStatus"},{"location":"models/#protooaerrorcode","text":"Error code ENUM. Name Number Description OA_AUTH_TOKEN_EXPIRED 1 When token used for account authorization is expired. ACCOUNT_NOT_AUTHORIZED 2 When account is not authorized. ALREADY_LOGGED_IN 14 When client tries to authorize after it was already authorized CH_CLIENT_AUTH_FAILURE 101 Open API client is not activated or wrong client credentials. CH_CLIENT_NOT_AUTHENTICATED 102 When a command is sent for not authorized Open API client. CH_CLIENT_ALREADY_AUTHENTICATED 103 Client is trying to authenticate twice. CH_ACCESS_TOKEN_INVALID 104 Access token is invalid. CH_SERVER_NOT_REACHABLE 105 Trading service is not available. CH_CTID_TRADER_ACCOUNT_NOT_FOUND 106 Trading account is not found. CH_OA_CLIENT_NOT_FOUND 107 Could not find this client id. REQUEST_FREQUENCY_EXCEEDED 108 Request frequency is reached. SERVER_IS_UNDER_MAINTENANCE 109 Server is under maintenance. CHANNEL_IS_BLOCKED 110 Operations are not allowed for this account. CONNECTIONS_LIMIT_EXCEEDED 67 Limit of connections is reached for this Open API client. WORSE_GSL_NOT_ALLOWED 68 Not allowed to increase risk for Positions with Guaranteed Stop Loss. SYMBOL_HAS_HOLIDAY 69 Trading disabled because symbol has holiday. NOT_SUBSCRIBED_TO_SPOTS 112 When trying to subscribe to depth, trendbars, etc. without spot subscription. ALREADY_SUBSCRIBED 113 When subscription is requested for an active. SYMBOL_NOT_FOUND 114 Symbol not found. UNKNOWN_SYMBOL 115 Note: to be merged with SYMBOL_NOT_FOUND. INCORRECT_BOUNDARIES 35 When requested period (from,to) is too large or invalid values are set to from/to. NO_QUOTES 117 Trading cannot be done as not quotes are available. Applicable for Book B. NOT_ENOUGH_MONEY 118 Not enough funds to allocate margin. MAX_EXPOSURE_REACHED 119 Max exposure limit is reached for a {trader, symbol, side}. POSITION_NOT_FOUND 120 Position not found. ORDER_NOT_FOUND 121 Order not found. POSITION_NOT_OPEN 122 When trying to close a position that it is not open. POSITION_LOCKED 123 Position in the state that does not allow to perform an operation. TOO_MANY_POSITIONS 124 Trading account reached its limit for max number of open positions and orders. TRADING_BAD_VOLUME 125 Invalid volume. TRADING_BAD_STOPS 126 Invalid stop price. TRADING_BAD_PRICES 127 Invalid price (e.g. negative). TRADING_BAD_STAKE 128 Invalid stake volume (e.g. negative). PROTECTION_IS_TOO_CLOSE_TO_MARKET 129 Invalid protection prices. TRADING_BAD_EXPIRATION_DATE 130 Invalid expiration. PENDING_EXECUTION 131 Unable to apply changes as position has an order under execution. TRADING_DISABLED 132 Trading is blocked for the symbol. TRADING_NOT_ALLOWED 133 Trading account is in read only mode. UNABLE_TO_CANCEL_ORDER 134 Unable to cancel order. UNABLE_TO_AMEND_ORDER 135 Unable to amend order. SHORT_SELLING_NOT_ALLOWED 136 Short selling is not allowed.","title":"ProtoOAErrorCode"},{"location":"models/#protooaexecutiontype","text":"Execution event type ENUM. Name Number Description ORDER_ACCEPTED 2 Order passed validation. ORDER_FILLED 3 Order filled. ORDER_REPLACED 4 Pending order is changed with a new one. ORDER_CANCELLED 5 Order cancelled. ORDER_EXPIRED 6 Order with GTD time in force is expired. ORDER_REJECTED 7 Order is rejected due to validations. ORDER_CANCEL_REJECTED 8 Cancel order request is rejected. SWAP 9 Type related to SWAP execution events. DEPOSIT_WITHDRAW 10 Type related to event of deposit or withdrawal cash flow operation. ORDER_PARTIAL_FILL 11 Order is partially filled. BONUS_DEPOSIT_WITHDRAW 12 Type related to event of bonus deposit or bonus withdrawal.","title":"ProtoOAExecutionType"},{"location":"models/#protooalimitedriskmargincalculationstrategy","text":"Name Number Description ACCORDING_TO_LEVERAGE 0 ACCORDING_TO_GSL 1 ACCORDING_TO_GSL_AND_LEVERAGE 2","title":"ProtoOALimitedRiskMarginCalculationStrategy"},{"location":"models/#protooamincommissiontype","text":"Enum for specifying type of minimum trading commission. Name Number Description CURRENCY 1 QUOTE_CURRENCY 2","title":"ProtoOAMinCommissionType"},{"location":"models/#protooanotificationtype","text":"Type of notification, currently only 3 instances of marginCall are supported. Name Number Description MARGIN_LEVEL_THRESHOLD_1 61 one of three margin calls, they are all similar. MARGIN_LEVEL_THRESHOLD_2 62 one of three margin calls, they are all similar. MARGIN_LEVEL_THRESHOLD_3 63 one of three margin calls, they are all similar.","title":"ProtoOANotificationType"},{"location":"models/#protooaorderstatus","text":"Order status ENUM. Name Number Description ORDER_STATUS_ACCEPTED 1 Order request validated and accepted for execution. ORDER_STATUS_FILLED 2 Order is fully filled. ORDER_STATUS_REJECTED 3 Order is rejected due to validation. ORDER_STATUS_EXPIRED 4 Order expired. Might be valid for orders with partially filled volume that were expired on LP. ORDER_STATUS_CANCELLED 5 Order is cancelled. Might be valid for orders with partially filled volume that were cancelled by LP.","title":"ProtoOAOrderStatus"},{"location":"models/#protooaordertriggermethod","text":"Stop Order and Stop Lost triggering method ENUM. Name Number Description TRADE 1 Stop Order: buy is triggered by ask, sell by bid; Stop Loss Order: for buy position is triggered by bid and for sell position by ask. OPPOSITE 2 Stop Order: buy is triggered by bid, sell by ask; Stop Loss Order: for buy position is triggered by ask and for sell position by bid. DOUBLE_TRADE 3 The same as TRADE, but trigger is checked after the second consecutive tick. DOUBLE_OPPOSITE 4 The same as OPPOSITE, but trigger is checked after the second consecutive tick.","title":"ProtoOAOrderTriggerMethod"},{"location":"models/#protooaordertype","text":"Order type ENUM. Name Number Description MARKET 1 LIMIT 2 STOP 3 STOP_LOSS_TAKE_PROFIT 4 MARKET_RANGE 5 STOP_LIMIT 6","title":"ProtoOAOrderType"},{"location":"models/#protooapayloadtype","text":"Name Number Description PROTO_OA_APPLICATION_AUTH_REQ 2100 PROTO_OA_APPLICATION_AUTH_RES 2101 PROTO_OA_ACCOUNT_AUTH_REQ 2102 PROTO_OA_ACCOUNT_AUTH_RES 2103 PROTO_OA_VERSION_REQ 2104 PROTO_OA_VERSION_RES 2105 PROTO_OA_NEW_ORDER_REQ 2106 PROTO_OA_TRAILING_SL_CHANGED_EVENT 2107 PROTO_OA_CANCEL_ORDER_REQ 2108 PROTO_OA_AMEND_ORDER_REQ 2109 PROTO_OA_AMEND_POSITION_SLTP_REQ 2110 PROTO_OA_CLOSE_POSITION_REQ 2111 PROTO_OA_ASSET_LIST_REQ 2112 PROTO_OA_ASSET_LIST_RES 2113 PROTO_OA_SYMBOLS_LIST_REQ 2114 PROTO_OA_SYMBOLS_LIST_RES 2115 PROTO_OA_SYMBOL_BY_ID_REQ 2116 PROTO_OA_SYMBOL_BY_ID_RES 2117 PROTO_OA_SYMBOLS_FOR_CONVERSION_REQ 2118 PROTO_OA_SYMBOLS_FOR_CONVERSION_RES 2119 PROTO_OA_SYMBOL_CHANGED_EVENT 2120 PROTO_OA_TRADER_REQ 2121 PROTO_OA_TRADER_RES 2122 PROTO_OA_TRADER_UPDATE_EVENT 2123 PROTO_OA_RECONCILE_REQ 2124 PROTO_OA_RECONCILE_RES 2125 PROTO_OA_EXECUTION_EVENT 2126 PROTO_OA_SUBSCRIBE_SPOTS_REQ 2127 PROTO_OA_SUBSCRIBE_SPOTS_RES 2128 PROTO_OA_UNSUBSCRIBE_SPOTS_REQ 2129 PROTO_OA_UNSUBSCRIBE_SPOTS_RES 2130 PROTO_OA_SPOT_EVENT 2131 PROTO_OA_ORDER_ERROR_EVENT 2132 PROTO_OA_DEAL_LIST_REQ 2133 PROTO_OA_DEAL_LIST_RES 2134 PROTO_OA_SUBSCRIBE_LIVE_TRENDBAR_REQ 2135 PROTO_OA_UNSUBSCRIBE_LIVE_TRENDBAR_REQ 2136 PROTO_OA_GET_TRENDBARS_REQ 2137 PROTO_OA_GET_TRENDBARS_RES 2138 PROTO_OA_EXPECTED_MARGIN_REQ 2139 PROTO_OA_EXPECTED_MARGIN_RES 2140 PROTO_OA_MARGIN_CHANGED_EVENT 2141 PROTO_OA_ERROR_RES 2142 PROTO_OA_CASH_FLOW_HISTORY_LIST_REQ 2143 PROTO_OA_CASH_FLOW_HISTORY_LIST_RES 2144 PROTO_OA_GET_TICKDATA_REQ 2145 PROTO_OA_GET_TICKDATA_RES 2146 PROTO_OA_ACCOUNTS_TOKEN_INVALIDATED_EVENT 2147 PROTO_OA_CLIENT_DISCONNECT_EVENT 2148 PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_REQ 2149 PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_RES 2150 PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_REQ 2151 PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_RES 2152 PROTO_OA_ASSET_CLASS_LIST_REQ 2153 PROTO_OA_ASSET_CLASS_LIST_RES 2154 PROTO_OA_DEPTH_EVENT 2155 PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_REQ 2156 PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_RES 2157 PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_REQ 2158 PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_RES 2159 PROTO_OA_SYMBOL_CATEGORY_REQ 2160 PROTO_OA_SYMBOL_CATEGORY_RES 2161 PROTO_OA_ACCOUNT_LOGOUT_REQ 2162 PROTO_OA_ACCOUNT_LOGOUT_RES 2163 PROTO_OA_ACCOUNT_DISCONNECT_EVENT 2164 PROTO_OA_SUBSCRIBE_LIVE_TRENDBAR_RES 2165 PROTO_OA_UNSUBSCRIBE_LIVE_TRENDBAR_RES 2166 PROTO_OA_MARGIN_CALL_LIST_REQ 2167 PROTO_OA_MARGIN_CALL_LIST_RES 2168 PROTO_OA_MARGIN_CALL_UPDATE_REQ 2169 PROTO_OA_MARGIN_CALL_UPDATE_RES 2170 PROTO_OA_MARGIN_CALL_UPDATE_EVENT 2171 PROTO_OA_MARGIN_CALL_TRIGGER_EVENT 2172 PROTO_OA_REFRESH_TOKEN_REQ 2173 PROTO_OA_REFRESH_TOKEN_RES 2174","title":"ProtoOAPayloadType"},{"location":"models/#protooapositionstatus","text":"Position status ENUM. Name Number Description POSITION_STATUS_OPEN 1 POSITION_STATUS_CLOSED 2 POSITION_STATUS_CREATED 3 Empty position is created for pending order. POSITION_STATUS_ERROR 4","title":"ProtoOAPositionStatus"},{"location":"models/#protooaquotetype","text":"Price quote type. Name Number Description BID 1 ASK 2","title":"ProtoOAQuoteType"},{"location":"models/#protooaswapcalculationtype","text":"Enum for specifying SWAP calculation type for symbol. Name Number Description PIPS 0 Specifies type of SWAP computation as PIPS (0) PERCENTAGE 1 Specifies type of SWAP computation as PERCENTAGE (1, annual, in percent)","title":"ProtoOASwapCalculationType"},{"location":"models/#protooasymboldistancetype","text":"Enum for specifying stop loss and take profit distances. Name Number Description SYMBOL_DISTANCE_IN_POINTS 1 SYMBOL_DISTANCE_IN_PERCENTAGE 2","title":"ProtoOASymbolDistanceType"},{"location":"models/#protooatimeinforce","text":"Order's time in force ENUM. Name Number Description GOOD_TILL_DATE 1 GOOD_TILL_CANCEL 2 IMMEDIATE_OR_CANCEL 3 FILL_OR_KILL 4 MARKET_ON_OPEN 5","title":"ProtoOATimeInForce"},{"location":"models/#protooatotalmargincalculationtype","text":"Enum for specifying margin calculation type for an account. Name Number Description MAX 0 SUM 1 NET 2","title":"ProtoOATotalMarginCalculationType"},{"location":"models/#protooatradeside","text":"Trader side ENUM. Used for order, position, deal. Name Number Description BUY 1 SELL 2","title":"ProtoOATradeSide"},{"location":"models/#protooatradingmode","text":"Enum for specifying symbol trading mode. Name Number Description ENABLED 0 DISABLED_WITHOUT_PENDINGS_EXECUTION 1 DISABLED_WITH_PENDINGS_EXECUTION 2 CLOSE_ONLY_MODE 3","title":"ProtoOATradingMode"},{"location":"models/#protooatrendbarperiod","text":"Trendbar period ENUM. Name Number Description M1 1 M2 2 M3 3 M4 4 M5 5 M10 6 M15 7 M30 8 H1 9 H4 10 H12 11 D1 12 W1 13 MN1 14","title":"ProtoOATrendbarPeriod"},{"location":"privacy-policy/","text":"Privacy Policy \u00b6 Our Privacy Policy applies to information and data collected on our website or through our products by Spotware Systems Ltd. and its affiliated partners. Spotware.com does not automatically collect any personal information from visitors to the website, and we do not request by default any identifiable information. In certain cases, such as for the opening of demo or live accounts for our various products, Spotware Systems Ltd or our partners may require specific information from you, such as your name and email address - and may use this information to help verify your identity, for any necessary correspondence, or to help us meet the specific needs of our visitors. If a live account is opened with any Spotware affiliated broker, Spotware does not control information passed through their website or through any communication with them . Please refer to the broker's privacy policy for details. Control of your information \u00b6 If you would specifically not like particular information to be used as a basis for contact with you, please notify us at info@spotware.com . We will make every effort to respond in a timely manner to requests to correct inaccuracies in personal or identifiable information. Information protection Any personal information submitted through the website contact forms or through any of the platforms is protected by technical and organizational measures such as data encryption to help keep your information secure and current. Cookies \u00b6 Spotware.com uses internet cookies to facilitate easier navigation throughout the website and increase visitor convenience. Your internet browser is likely to accept these cookies by default, however you can refer to your browser's help guide if you would like to reject or delete them from your system. We may use both \"session\" cookies and \"persistent\" cookies on the website. We will use the session cookies to keep track of you whilst you navigate the website; and other uses. We will use the persistent cookies to enable our website to recognise you when you visit; and other uses. Session cookies will be deleted from your computer when you close your browser. Persistent cookies will remain stored on your computer until deleted, or until they reach a specified expiry date. Cookies used by spotware.com do not retrieve any personal information or any information from the visitor's computer. Third Parties \u00b6 Spotware does not share, sell, or otherwise transmit any information, personal or otherwise, collected through the website, platforms, or through correspondence, with any third parties or affiliated companies. Any information is kept securely and is confidential. Changes to this Privacy Statement \u00b6 Spotware will post any changes made to the privacy statement on this page and through other communication mediums we deem appropriate for our users to be aware of any changes that are made which information is collected and how it is used.","title":"Privacy Policy"},{"location":"privacy-policy/#privacy-policy","text":"Our Privacy Policy applies to information and data collected on our website or through our products by Spotware Systems Ltd. and its affiliated partners. Spotware.com does not automatically collect any personal information from visitors to the website, and we do not request by default any identifiable information. In certain cases, such as for the opening of demo or live accounts for our various products, Spotware Systems Ltd or our partners may require specific information from you, such as your name and email address - and may use this information to help verify your identity, for any necessary correspondence, or to help us meet the specific needs of our visitors. If a live account is opened with any Spotware affiliated broker, Spotware does not control information passed through their website or through any communication with them . Please refer to the broker's privacy policy for details.","title":"Privacy Policy"},{"location":"privacy-policy/#control-of-your-information","text":"If you would specifically not like particular information to be used as a basis for contact with you, please notify us at info@spotware.com . We will make every effort to respond in a timely manner to requests to correct inaccuracies in personal or identifiable information. Information protection Any personal information submitted through the website contact forms or through any of the platforms is protected by technical and organizational measures such as data encryption to help keep your information secure and current.","title":"Control of your information"},{"location":"privacy-policy/#cookies","text":"Spotware.com uses internet cookies to facilitate easier navigation throughout the website and increase visitor convenience. Your internet browser is likely to accept these cookies by default, however you can refer to your browser's help guide if you would like to reject or delete them from your system. We may use both \"session\" cookies and \"persistent\" cookies on the website. We will use the session cookies to keep track of you whilst you navigate the website; and other uses. We will use the persistent cookies to enable our website to recognise you when you visit; and other uses. Session cookies will be deleted from your computer when you close your browser. Persistent cookies will remain stored on your computer until deleted, or until they reach a specified expiry date. Cookies used by spotware.com do not retrieve any personal information or any information from the visitor's computer.","title":"Cookies"},{"location":"privacy-policy/#third-parties","text":"Spotware does not share, sell, or otherwise transmit any information, personal or otherwise, collected through the website, platforms, or through correspondence, with any third parties or affiliated companies. Any information is kept securely and is confidential.","title":"Third Parties"},{"location":"privacy-policy/#changes-to-this-privacy-statement","text":"Spotware will post any changes made to the privacy statement on this page and through other communication mediums we deem appropriate for our users to be aware of any changes that are made which information is collected and how it is used.","title":"Changes to this Privacy Statement"},{"location":"profit-loss-calculation/","text":"What you need? \u00b6 You have to be able to convert one currency value to another for calculating a trading account positions profit/loss, a trading account deposit currency can be any currency, and you must be able to convert the profit/loss of a position to the account currency otherwise your user will have hard time to figure out the exact amount of his return from his trades. Forex Symbols \u00b6 A Forex symbol is made up of two different currencies, one is base currency and the other one is quote currency, for example EURUSD, here EUR is base currency and USD is the quote currency, and the current price of EURUSD gives you the amount of USD that is equal to 1 EUR. Symbol Tick/Pip Size \u00b6 The Tick is the lowest amount that a symbol price can change, each broker or symbol can have different Tick values The Pip is X amount of Ticks. Calculating a Symbol Tick/Pip Size \u00b6 To get the amount/size of a symbol Tick/Pip follow these steps: Get the symbol full data ( ProtoOASymbol ) by sending a ProtoOASymbolByIdReq message, you have to populate the message with symbol and trading account IDs After sending the request message you will receive a ProtoOASymbolByIdRes message, use the response message symbol field to get the symbol model The symbol model has a digits field, the Tick size is 1 over 10 to power of symbol digits or mathematically 1 / Pow(10, digits) The symbol model has a pipPosition field, the symbol Pip size is 1 over 10 to power of symbol pipPosition or mathematically 1 / Pow(10, pipPosition) Now you have both symbol Tick and Pip size Symbol Tick/Pip Value \u00b6 The Tick value is the monetary value of one Tick of a symbol, or the monetary value of lowest amount of price change for 1 unit volume. The Pip value is the monetary value of one Pip of a symbol for 1 unit volume. Calculating a Symbol Tick/Pip value \u00b6 Calculating a symbol Tick/Pip value is a bit tricky because its not fixed like Tick/Pip size, it keeps changing based on currency conversion rates, and you have to use the latest currency conversion rates to calculate it. If a symbol quote currency is the same as the account deposit currency then the symbol Tick value is equal to its Tick size. You have to have all the trading account symbols and assets data to be able to calculate a symbol Pip/Tick value and also each symbol's latest Bid/Ask prices. To calculate a symbol Tick value when the symbol quote currency is not same as account deposit currency follow these steps: Find the conversion symbol, it's the symbol that we will use for converting the price, for this we will use API assets and asset IDs The conversion symbol is the symbol that its base currency (asset ID) or quote currency (asset ID) is same as our symbol quote currency (asset ID), and its base currency (asset ID) or quote currency (asset ID) is same as trading account deposit currency (asset ID) Iterate over all of the account symbols data and find the conversion symbol based on above instruction If the account deposit currency (asset ID) is same as conversion symbol base currency (asset ID) then the Tick value is our symbol Tick size divided by conversion symbol current price If the account deposit currency (asset ID) is not same as conversion symbol base currency (asset ID) then Tick value is product of our symbol Tick size and conversion symbol current price Now you have the symbol Tick value, what about Pip value? to get Pip value we multiply the Tick value to the product of symbol Pip size divided by symbol Tick size: pipValue = tickValue * (pipSize / tickSize) You can use a symbol Pip/Tick value for calculating positions profit/loss or risk management. Calculating a Position Profit/Loss \u00b6 Now let's try to calculate a position profit/loss, for example we have a buy EURUSD position, the volume is 0.01 lots or 1000 units, the position entry is at 1.20345, and the current price of EURUSD is 1.19654. Lets first find how much is the position return, to do that we subtract the entry price from current price, if it was a sell position we would subtract current price from entry price: return = current price - entry price Now we get -0.00691, which is our position return, but we don't know the monetary value of this amount of EURUSD based on our position volume. Let's now change the return to Pips, so to change absolute price to Pips we multiply the price to 10 to power of symbol Pip Position and then we round it: pips = Round(return * Pow(10, PipPosition), symbol.Digits - symbol.PipPosition) The symbol Pip position is in ( ProtoOASymbol ). Now we have the number of Pips, but we still don't know the monetary value, now let's change the Pips to monetary value: volume = positionVolumeMonetary / 100 grossProfit = Pips * Symbol.PipValue * volume // You can get a position Money digits from ProtoOAPosition model via reconcile request or execution event // Pow means Power // Swap can be positive/negative positionSwapMonetary = positionSwap / Pow(10, MoneyDigits) // API gives commission in negative form // We multiply the commission by two because we must calculate the position for both opening and closing orders of position positionDoubleCommissionMonetary = (positionCommission * 2) / Pow(10, MoneyDigits) netProfit = GrossProfit + positionDoubleCommissionMonetary + positionSwapMonetary","title":"Profit/Loss Calculation"},{"location":"profit-loss-calculation/#what-you-need","text":"You have to be able to convert one currency value to another for calculating a trading account positions profit/loss, a trading account deposit currency can be any currency, and you must be able to convert the profit/loss of a position to the account currency otherwise your user will have hard time to figure out the exact amount of his return from his trades.","title":"What you need?"},{"location":"profit-loss-calculation/#forex-symbols","text":"A Forex symbol is made up of two different currencies, one is base currency and the other one is quote currency, for example EURUSD, here EUR is base currency and USD is the quote currency, and the current price of EURUSD gives you the amount of USD that is equal to 1 EUR.","title":"Forex Symbols"},{"location":"profit-loss-calculation/#symbol-tickpip-size","text":"The Tick is the lowest amount that a symbol price can change, each broker or symbol can have different Tick values The Pip is X amount of Ticks.","title":"Symbol Tick/Pip Size"},{"location":"profit-loss-calculation/#calculating-a-symbol-tickpip-size","text":"To get the amount/size of a symbol Tick/Pip follow these steps: Get the symbol full data ( ProtoOASymbol ) by sending a ProtoOASymbolByIdReq message, you have to populate the message with symbol and trading account IDs After sending the request message you will receive a ProtoOASymbolByIdRes message, use the response message symbol field to get the symbol model The symbol model has a digits field, the Tick size is 1 over 10 to power of symbol digits or mathematically 1 / Pow(10, digits) The symbol model has a pipPosition field, the symbol Pip size is 1 over 10 to power of symbol pipPosition or mathematically 1 / Pow(10, pipPosition) Now you have both symbol Tick and Pip size","title":"Calculating a Symbol Tick/Pip Size"},{"location":"profit-loss-calculation/#symbol-tickpip-value","text":"The Tick value is the monetary value of one Tick of a symbol, or the monetary value of lowest amount of price change for 1 unit volume. The Pip value is the monetary value of one Pip of a symbol for 1 unit volume.","title":"Symbol Tick/Pip Value"},{"location":"profit-loss-calculation/#calculating-a-symbol-tickpip-value","text":"Calculating a symbol Tick/Pip value is a bit tricky because its not fixed like Tick/Pip size, it keeps changing based on currency conversion rates, and you have to use the latest currency conversion rates to calculate it. If a symbol quote currency is the same as the account deposit currency then the symbol Tick value is equal to its Tick size. You have to have all the trading account symbols and assets data to be able to calculate a symbol Pip/Tick value and also each symbol's latest Bid/Ask prices. To calculate a symbol Tick value when the symbol quote currency is not same as account deposit currency follow these steps: Find the conversion symbol, it's the symbol that we will use for converting the price, for this we will use API assets and asset IDs The conversion symbol is the symbol that its base currency (asset ID) or quote currency (asset ID) is same as our symbol quote currency (asset ID), and its base currency (asset ID) or quote currency (asset ID) is same as trading account deposit currency (asset ID) Iterate over all of the account symbols data and find the conversion symbol based on above instruction If the account deposit currency (asset ID) is same as conversion symbol base currency (asset ID) then the Tick value is our symbol Tick size divided by conversion symbol current price If the account deposit currency (asset ID) is not same as conversion symbol base currency (asset ID) then Tick value is product of our symbol Tick size and conversion symbol current price Now you have the symbol Tick value, what about Pip value? to get Pip value we multiply the Tick value to the product of symbol Pip size divided by symbol Tick size: pipValue = tickValue * (pipSize / tickSize) You can use a symbol Pip/Tick value for calculating positions profit/loss or risk management.","title":"Calculating a Symbol Tick/Pip value"},{"location":"profit-loss-calculation/#calculating-a-position-profitloss","text":"Now let's try to calculate a position profit/loss, for example we have a buy EURUSD position, the volume is 0.01 lots or 1000 units, the position entry is at 1.20345, and the current price of EURUSD is 1.19654. Lets first find how much is the position return, to do that we subtract the entry price from current price, if it was a sell position we would subtract current price from entry price: return = current price - entry price Now we get -0.00691, which is our position return, but we don't know the monetary value of this amount of EURUSD based on our position volume. Let's now change the return to Pips, so to change absolute price to Pips we multiply the price to 10 to power of symbol Pip Position and then we round it: pips = Round(return * Pow(10, PipPosition), symbol.Digits - symbol.PipPosition) The symbol Pip position is in ( ProtoOASymbol ). Now we have the number of Pips, but we still don't know the monetary value, now let's change the Pips to monetary value: volume = positionVolumeMonetary / 100 grossProfit = Pips * Symbol.PipValue * volume // You can get a position Money digits from ProtoOAPosition model via reconcile request or execution event // Pow means Power // Swap can be positive/negative positionSwapMonetary = positionSwap / Pow(10, MoneyDigits) // API gives commission in negative form // We multiply the commission by two because we must calculate the position for both opening and closing orders of position positionDoubleCommissionMonetary = (positionCommission * 2) / Pow(10, MoneyDigits) netProfit = GrossProfit + positionDoubleCommissionMonetary + positionSwapMonetary","title":"Calculating a Position Profit/Loss"},{"location":"protocol-buffers/","text":"Protocol Buffers \u00b6 Protocol buffers or Protobuf is language- and platform-neutral, extensible mechanism for serializing structured data, a way of encoding structured data in an efficient yet extensible format. You define how you want your data to be structured once, then you use special generated source code to easily write and read your structured data to and from a variety of data streams and using a variety of languages. You specify how you want the information you're serializing to be structured by defining protocol buffer message types in .proto files. Each protocol buffer message is a small logical record of the information, containing the series of name-value pairs. Here's a very basic example of a .proto file that defines a message containing information about a person: message Person { required string name = 1; required int32 id = 2; optional string email = 3; enum PhoneType { MOBILE = 0; HOME = 1; WORK = 2; } message PhoneNumber { required string number = 1; optional PhoneType type = 2 [default = HOME]; } repeated PhoneNumber phone = 4; } As you can see, the message format is simple - each message type has one or more uniquely numbered fields, and each field has a name and a value type, where value types can be numbers (integer or floating-point), booleans, strings, raw bytes, or even (as in the example above) other protocol buffer message types, allowing you to structure your data hierarchically. You can find more information about writing .proto files in the Protocol Buffer Language Guide . Once you've defined your messages, you run the protocol buffer compiler for your application's language on your .proto file to generate data access classes. These provide simple accessors for each field (like name() and set_name()) as well as methods to serialize/parse the whole structure to/from raw bytes - so, for instance, if your chosen language is C++, running the compiler on the above example will generate a class called Person. You can then use this class in your application to populate, serialize, and retrieve Person protocol buffer messages. Learn more about the Protocol Buffers here . Note Open API uses Protocol Buffers version 2 syntax, you can use the latest version of Protocol Buffers compiler/SDKs as they are backward compatible and work with both version 2 and 3 message files. ProtoMessages \u00b6 The network communication in Open API 2.0 is performed by means of ProtoMessage objects - the protobuf messages designed by Spotware. In order to deal with the network fragmentation we will send messages to the network using the following frame structure: +--------------------------+-----------------------------------------+ | Message Length (4 bytes) | Serialized ProtoMessage object (byte[]) | +--------------------------+-----------------------------------------+ |<---------- Message Length ------------->| ProtoMessage has the following structure: +----------------------+ | int32 payloadType | | byte[] payload | | string clientMsgId | +----------------------+ It contains 2 mandatory fields: payloadType : Contains the ProtoPayloadType ID, This field tells us what is the type of the protobuf object serialized in the second field. payload : Serialized protobuf message that corresponds to payloadType. And an optional field: clientMsgId : Request message ID, assigned by the client that will be returned in the response. The actual ProtoMessage definition looks as follows: message ProtoMessage { required uint32 payloadType = 1; //Contains ID of the ProtoPayloadType or other custom PayloadTypes (e.g. ProtoCHPayloadType). optional bytes payload = 2; //Serialized protobuf message that corresponds to the payloadType optional string clientMsgId = 3; //The request message ID, assigned by the client that will be returned in the response. } Note The system architecture is little-endian (that is, little end first), you must reverse the byte array you want to read or write. Naming Convention \u00b6 All messages could be divided into the Request messages, Response messages, Event messages, and Model messages: Request \u00b6 Request messages are used for sending requests to the server, example: ProtoAuthReq Where Req means request command message Response \u00b6 Response messages are used to receive data back from the server, example: ProtoAuthRes Where Res means response command message. Event \u00b6 Event messages are used for notifying subscribers with asynchronous messages. The classic example is ping command, its proto class name is ProtoPingEvent. The naming convention of events is ProtoEventNameEvent. Model \u00b6 Model messages describe entities that participate in the Server domain model. Naming conventions of the Model messages is ProtoEntityName, example: ProtoOrder ProtoUser ProtoPosition Compiling Protobuf Classes \u00b6 Protobuf is the flexible and automated solution designed to simplify the serializing and retrieving structured data. With protocol buffers, you write a .proto description of the data structure you wish to store. From that, the protocol buffer compiler creates a class that implements automatic encoding and parsing of the protocol buffer data with an efficient binary format. The generated class provides getters and setters for the fields that make up a protocol buffer and takes care of the details of reading and writing the protocol buffer as a unit. Importantly, the protocol buffer format supports the idea of extending the format over time in such a way that the code can still read data encoded with the old format. You can download the latest version of Open API Protocol Buffers message files from here . After you downloaded the message proto files, extract them, and use the latest available version of Google Protocol Buffers for your operating system to compile it. You can download the latest version of Google Protocol Buffers from here . To compile the message files use the Google Protocol Buffers tutorial for your programming language that you want to use. Note The system architecture is little-endian (that is, little end first), you must reverse the byte array you want to read or write. Endpoints \u00b6 Open API 2.0 utilizes Spotware's Proxy Cloud to ensure fast and smooth operation of your application. Currently the following proxies are available for Open API: For accessing Demo accounts: demo.ctraderapi.com:5035 For accessing Live accounts: live.ctraderapi.com:5035 Limitations \u00b6 The endpoints are subject to the following limitations: 50 requests per second per application for non historical data requests. 5 requests per second per application for historical data requests. 25 concurrent connections per application.","title":"Protocol Buffers"},{"location":"protocol-buffers/#protocol-buffers","text":"Protocol buffers or Protobuf is language- and platform-neutral, extensible mechanism for serializing structured data, a way of encoding structured data in an efficient yet extensible format. You define how you want your data to be structured once, then you use special generated source code to easily write and read your structured data to and from a variety of data streams and using a variety of languages. You specify how you want the information you're serializing to be structured by defining protocol buffer message types in .proto files. Each protocol buffer message is a small logical record of the information, containing the series of name-value pairs. Here's a very basic example of a .proto file that defines a message containing information about a person: message Person { required string name = 1; required int32 id = 2; optional string email = 3; enum PhoneType { MOBILE = 0; HOME = 1; WORK = 2; } message PhoneNumber { required string number = 1; optional PhoneType type = 2 [default = HOME]; } repeated PhoneNumber phone = 4; } As you can see, the message format is simple - each message type has one or more uniquely numbered fields, and each field has a name and a value type, where value types can be numbers (integer or floating-point), booleans, strings, raw bytes, or even (as in the example above) other protocol buffer message types, allowing you to structure your data hierarchically. You can find more information about writing .proto files in the Protocol Buffer Language Guide . Once you've defined your messages, you run the protocol buffer compiler for your application's language on your .proto file to generate data access classes. These provide simple accessors for each field (like name() and set_name()) as well as methods to serialize/parse the whole structure to/from raw bytes - so, for instance, if your chosen language is C++, running the compiler on the above example will generate a class called Person. You can then use this class in your application to populate, serialize, and retrieve Person protocol buffer messages. Learn more about the Protocol Buffers here . Note Open API uses Protocol Buffers version 2 syntax, you can use the latest version of Protocol Buffers compiler/SDKs as they are backward compatible and work with both version 2 and 3 message files.","title":"Protocol Buffers"},{"location":"protocol-buffers/#protomessages","text":"The network communication in Open API 2.0 is performed by means of ProtoMessage objects - the protobuf messages designed by Spotware. In order to deal with the network fragmentation we will send messages to the network using the following frame structure: +--------------------------+-----------------------------------------+ | Message Length (4 bytes) | Serialized ProtoMessage object (byte[]) | +--------------------------+-----------------------------------------+ |<---------- Message Length ------------->| ProtoMessage has the following structure: +----------------------+ | int32 payloadType | | byte[] payload | | string clientMsgId | +----------------------+ It contains 2 mandatory fields: payloadType : Contains the ProtoPayloadType ID, This field tells us what is the type of the protobuf object serialized in the second field. payload : Serialized protobuf message that corresponds to payloadType. And an optional field: clientMsgId : Request message ID, assigned by the client that will be returned in the response. The actual ProtoMessage definition looks as follows: message ProtoMessage { required uint32 payloadType = 1; //Contains ID of the ProtoPayloadType or other custom PayloadTypes (e.g. ProtoCHPayloadType). optional bytes payload = 2; //Serialized protobuf message that corresponds to the payloadType optional string clientMsgId = 3; //The request message ID, assigned by the client that will be returned in the response. } Note The system architecture is little-endian (that is, little end first), you must reverse the byte array you want to read or write.","title":"ProtoMessages"},{"location":"protocol-buffers/#naming-convention","text":"All messages could be divided into the Request messages, Response messages, Event messages, and Model messages:","title":"Naming Convention"},{"location":"protocol-buffers/#request","text":"Request messages are used for sending requests to the server, example: ProtoAuthReq Where Req means request command message","title":"Request"},{"location":"protocol-buffers/#response","text":"Response messages are used to receive data back from the server, example: ProtoAuthRes Where Res means response command message.","title":"Response"},{"location":"protocol-buffers/#event","text":"Event messages are used for notifying subscribers with asynchronous messages. The classic example is ping command, its proto class name is ProtoPingEvent. The naming convention of events is ProtoEventNameEvent.","title":"Event"},{"location":"protocol-buffers/#model","text":"Model messages describe entities that participate in the Server domain model. Naming conventions of the Model messages is ProtoEntityName, example: ProtoOrder ProtoUser ProtoPosition","title":"Model"},{"location":"protocol-buffers/#compiling-protobuf-classes","text":"Protobuf is the flexible and automated solution designed to simplify the serializing and retrieving structured data. With protocol buffers, you write a .proto description of the data structure you wish to store. From that, the protocol buffer compiler creates a class that implements automatic encoding and parsing of the protocol buffer data with an efficient binary format. The generated class provides getters and setters for the fields that make up a protocol buffer and takes care of the details of reading and writing the protocol buffer as a unit. Importantly, the protocol buffer format supports the idea of extending the format over time in such a way that the code can still read data encoded with the old format. You can download the latest version of Open API Protocol Buffers message files from here . After you downloaded the message proto files, extract them, and use the latest available version of Google Protocol Buffers for your operating system to compile it. You can download the latest version of Google Protocol Buffers from here . To compile the message files use the Google Protocol Buffers tutorial for your programming language that you want to use. Note The system architecture is little-endian (that is, little end first), you must reverse the byte array you want to read or write.","title":"Compiling Protobuf Classes"},{"location":"protocol-buffers/#endpoints","text":"Open API 2.0 utilizes Spotware's Proxy Cloud to ensure fast and smooth operation of your application. Currently the following proxies are available for Open API: For accessing Demo accounts: demo.ctraderapi.com:5035 For accessing Live accounts: live.ctraderapi.com:5035","title":"Endpoints"},{"location":"protocol-buffers/#limitations","text":"The endpoints are subject to the following limitations: 50 requests per second per application for non historical data requests. 5 requests per second per application for historical data requests. 25 concurrent connections per application.","title":"Limitations"},{"location":"reading-writing/","text":"Reading \u00b6 To read Proto messages from API you have to follow these steps: Read first four bytes, that's the message length, reverse the byte array, and change it to integer Use the length and read that amount of bytes from stream Now you have the full message bytes, use Google Protocol Buffer SKD for your programming language to deserialize the message to ProtoMessage Use the ProtoMessage payloadType field to find the actual message type, then deserialize the payload with Google Protocol Buffer SKD to that message type Writing \u00b6 To write your proto message to API stream follow these steps: Change the proto message object to byte array by using Google Protocol Buffer SKD for your programming language Get the length of byte array, change it to byte array, reverse it, write the reversed length byte array to stream Write the message byte array to stream Note The system architecture is little-endian (that is, little end first), that's why we have to reverse the byte array before reading or writing.","title":"Reading/Writing"},{"location":"reading-writing/#reading","text":"To read Proto messages from API you have to follow these steps: Read first four bytes, that's the message length, reverse the byte array, and change it to integer Use the length and read that amount of bytes from stream Now you have the full message bytes, use Google Protocol Buffer SKD for your programming language to deserialize the message to ProtoMessage Use the ProtoMessage payloadType field to find the actual message type, then deserialize the payload with Google Protocol Buffer SKD to that message type","title":"Reading"},{"location":"reading-writing/#writing","text":"To write your proto message to API stream follow these steps: Change the proto message object to byte array by using Google Protocol Buffer SKD for your programming language Get the length of byte array, change it to byte array, reverse it, write the reversed length byte array to stream Write the message byte array to stream Note The system architecture is little-endian (that is, little end first), that's why we have to reverse the byte array before reading or writing.","title":"Writing"},{"location":"symbol-data/","text":"Historical Bars Data \u00b6 To get the historical price data of a symbol follow these steps: Create a ProtoOAGetTrendbarsReq message You have to fill the message fields with the trading account ID, symbol ID, period (time frame), and from/to timestamps, which are in Unix time milliseconds, the timestamps are subject to some limitations that you can find on message reference table Send the message, and you will receive a ProtoOAGetTrendbarsRes message, which will contain the historical data on its trendbar field Transform the data from relative format to actual price format, to do that you have to use the trend bar low and divide it by 100000, round the result to symbol digits, then for getting high, open, close price levels first add the trend bar delta level of each to low, then divide each by 100000, and round the result to symbol digits Now you have the historical price data for your requested time period Historical Tick Data \u00b6 You can get the historical tick price data from API, to get the tick data follow these steps: Create a ProtoOAGetTickDataReq message You have to fill the message fields with the trading account ID, symbol ID, type (bid/ask), and from/to timestamps, which are in Unix time milliseconds, the timestamps are subject to some limitations that you can find on message reference table Send the message, and you will receive a ProtoOAGetTickDataRes message, which will contain the historical data on its tickData field Transform the data from relative format to actual price format, to do that you have to divide each tick by 100000, round the result to symbol digits Now you have the historical tick data for your requested time period, there is an \"hasMore\" boolean field on ProtoOAGetTickDataRes, use it to check if there are more data than the amount returned Live Bars Data \u00b6 You can subscribe and receive live bars data from API, to receive live bars data follow these steps: Create a ProtoOASubscribeLiveTrendbarReq message You have to fill the message fields with the trading account ID, symbol ID, and period (time frame) Send the message, and you will receive a ProtoOASubscribeLiveTrendbarRes message, it means you are now subscribed to live bars data, and you will receive ProtoOASpotEvent messages When you received a ProtoOASpotEvent message, use its trendbar field to get the last closed bar data, you have to transform the relative price to actual price by dividing the trend bar low to 100000, round the result to symbol digits, then for getting high, open, close price levels first add the trend bar delta level of each to low, then divide each by 100000, and round the result to symbol digits If you don't need the live bars data anymore you can unsubscribe from it by sending a ProtoOAUnsubscribeLiveTrendbarReq message with your subscription detail (symbol ID, period, and trading account ID), you should receive a ProtoOAUnsubscribeLiveTrendbarRes message Live Quotes \u00b6 You can subscribe and receive live bid/ask quotes of a symbol from API, to receive live quotes data follow these steps: Create a ProtoOASubscribeSpotsReq message You have to fill the message fields with the trading account ID and symbol ID Send the message, and you will receive a ProtoOASubscribeSpotsRes message, it means you are now subscribed to live quotes, and you will receive ProtoOASpotEvent messages When you received a ProtoOASpotEvent message, use its ask/bid fields to get the lastest ask/bid levels, you have to transform the relative price to actual price by dividing it to 100000, round the result to symbol digits, the message doesn't always has both bid/ask, it gives you the latest changed price of either bid/ask or both If you don't need the live bars data anymore you can unsubscribe from it by sending a ProtoOAUnsubscribeSpotsReq message with your subscription detail (symbol ID and trading account ID), you should receive a ProtoOAUnsubscribeSpotsRes message Depth Quotes \u00b6 You can subscribe and receive live depth or Level II quotes of a symbol from API, to receive the market depth data follow these steps: Create a ProtoOASubscribeDepthQuotesReq message You have to fill the message fields with the trading account ID and symbol ID Send the message, and you will receive a ProtoOASubscribeDepthQuotesRes message, it means you are now subscribed to depth quotes, and you will receive ProtoOADepthEvent messages When you received a ProtoOADepthEvent message, use it's newQuotes/deletedQuotes fields to get the lastest market depth data, you have to transform the relative price to actual price by dividing it to 100000, round the result to symbol digits, you also have to transform the depth quote size from cent by dividing it to 100 If you don't need the depth quotes data anymore you can unsubscribe from it by sending a ProtoOAUnsubscribeDepthQuotesReq message with your subscription detail (symbol ID and trading account ID), you should receive a ProtoOAUnsubscribeDepthQuotesRes message","title":"Symbol Data"},{"location":"symbol-data/#historical-bars-data","text":"To get the historical price data of a symbol follow these steps: Create a ProtoOAGetTrendbarsReq message You have to fill the message fields with the trading account ID, symbol ID, period (time frame), and from/to timestamps, which are in Unix time milliseconds, the timestamps are subject to some limitations that you can find on message reference table Send the message, and you will receive a ProtoOAGetTrendbarsRes message, which will contain the historical data on its trendbar field Transform the data from relative format to actual price format, to do that you have to use the trend bar low and divide it by 100000, round the result to symbol digits, then for getting high, open, close price levels first add the trend bar delta level of each to low, then divide each by 100000, and round the result to symbol digits Now you have the historical price data for your requested time period","title":"Historical Bars Data"},{"location":"symbol-data/#historical-tick-data","text":"You can get the historical tick price data from API, to get the tick data follow these steps: Create a ProtoOAGetTickDataReq message You have to fill the message fields with the trading account ID, symbol ID, type (bid/ask), and from/to timestamps, which are in Unix time milliseconds, the timestamps are subject to some limitations that you can find on message reference table Send the message, and you will receive a ProtoOAGetTickDataRes message, which will contain the historical data on its tickData field Transform the data from relative format to actual price format, to do that you have to divide each tick by 100000, round the result to symbol digits Now you have the historical tick data for your requested time period, there is an \"hasMore\" boolean field on ProtoOAGetTickDataRes, use it to check if there are more data than the amount returned","title":"Historical Tick Data"},{"location":"symbol-data/#live-bars-data","text":"You can subscribe and receive live bars data from API, to receive live bars data follow these steps: Create a ProtoOASubscribeLiveTrendbarReq message You have to fill the message fields with the trading account ID, symbol ID, and period (time frame) Send the message, and you will receive a ProtoOASubscribeLiveTrendbarRes message, it means you are now subscribed to live bars data, and you will receive ProtoOASpotEvent messages When you received a ProtoOASpotEvent message, use its trendbar field to get the last closed bar data, you have to transform the relative price to actual price by dividing the trend bar low to 100000, round the result to symbol digits, then for getting high, open, close price levels first add the trend bar delta level of each to low, then divide each by 100000, and round the result to symbol digits If you don't need the live bars data anymore you can unsubscribe from it by sending a ProtoOAUnsubscribeLiveTrendbarReq message with your subscription detail (symbol ID, period, and trading account ID), you should receive a ProtoOAUnsubscribeLiveTrendbarRes message","title":"Live Bars Data"},{"location":"symbol-data/#live-quotes","text":"You can subscribe and receive live bid/ask quotes of a symbol from API, to receive live quotes data follow these steps: Create a ProtoOASubscribeSpotsReq message You have to fill the message fields with the trading account ID and symbol ID Send the message, and you will receive a ProtoOASubscribeSpotsRes message, it means you are now subscribed to live quotes, and you will receive ProtoOASpotEvent messages When you received a ProtoOASpotEvent message, use its ask/bid fields to get the lastest ask/bid levels, you have to transform the relative price to actual price by dividing it to 100000, round the result to symbol digits, the message doesn't always has both bid/ask, it gives you the latest changed price of either bid/ask or both If you don't need the live bars data anymore you can unsubscribe from it by sending a ProtoOAUnsubscribeSpotsReq message with your subscription detail (symbol ID and trading account ID), you should receive a ProtoOAUnsubscribeSpotsRes message","title":"Live Quotes"},{"location":"symbol-data/#depth-quotes","text":"You can subscribe and receive live depth or Level II quotes of a symbol from API, to receive the market depth data follow these steps: Create a ProtoOASubscribeDepthQuotesReq message You have to fill the message fields with the trading account ID and symbol ID Send the message, and you will receive a ProtoOASubscribeDepthQuotesRes message, it means you are now subscribed to depth quotes, and you will receive ProtoOADepthEvent messages When you received a ProtoOADepthEvent message, use it's newQuotes/deletedQuotes fields to get the lastest market depth data, you have to transform the relative price to actual price by dividing it to 100000, round the result to symbol digits, you also have to transform the depth quote size from cent by dividing it to 100 If you don't need the depth quotes data anymore you can unsubscribe from it by sending a ProtoOAUnsubscribeDepthQuotesReq message with your subscription detail (symbol ID and trading account ID), you should receive a ProtoOAUnsubscribeDepthQuotesRes message","title":"Depth Quotes"},{"location":"terms-of-use/","text":"Terms of Use \u00b6 You can find the terms of use of Spotware Open API here. To start using the API, just apply for your own Partner's Credentials (OAuth Public Client ID and Client Secret). For more details check the Open Authentication section of this guide. Acceptance of Terms of Use \u00b6 By registering an application and by using Spotware Connect API, you confirm that you have read, understood and agree to these terms of use. API License \u00b6 As long as you adhere to the terms of use, we grant you a limited, non-exclusive, non-assignable, non-transferable license under Spotware\u2019s intellectual property rights to use the APIs to develop, test, and support your Application, and to let your customers use your integration of the APIs within your Application. Cost \u00b6 Spotware Connect API is offered for free. Nevertheless, Spotware Systems Ltd reserves the right to change the pricing policy without prior notice and without your consent. Limitation of Liability \u00b6 The API is provided \u201cas is\u201d. It is your sole responsibility to test the API and decide if it is appropriate for your business needs. Spotware Systems Ltd does not make any promises nor does it provide any guarantee regarding the performance, reliability and availability of the API. In no event shall Spotware Systems Ltd be liable for any damages (including, without limitation, lost profits, business interruption, or lost information) arising out of use of or inability to use the API, even if Spotware Systems Ltd has been advised of the possibility of such damages. In no event will Spotware Systems Ltd be liable for loss of data or for indirect, special, incidental, consequential (including lost profit), or other damages based on contract, tort or otherwise. Spotware Systems Ltd shall have no liability with respect to the content of Spotware Systems products or any part thereof, including but not limited to errors or omissions contained therein, libel, infringements of rights of publicity, privacy, trademark rights, business interruption, personal injury, loss of privacy, moral rights or the disclosure of confidential information. Modification \u00b6 Spotware Systems Ltd reserves the right to modify the API and the terms of use at any time without prior notice and without any liability. Fair Use \u00b6 Resources \u00b6 You agree to use the API and the resources provided by Spotware Systems Ltd in a fair and sensible manner. You should take all the measures required on your side to avoid unreasonable use of APIs resources. In case of misuse of the API, Spotware Systems Ltd reserves the right to restrict or remove access to your application. User Data \u00b6 By using the API you can gain access to sensitive user information. You may not use, store, distribute or process traders\u2019 personal information in any way other than to fulfill the specific trading objectives which your application has been built to serve. In addition, any processing of traders\u2019 personal information must have the explicit prior approval from the traders and a valid legal basis for the intended processing. Finally, you should not provide or embed in the application functionality that results in the execution of trading actions on behalf of the trader, without his / her explicit prior approval. Also by using Connect API, you acknowledge that you operate in accordance with General Data Protection Regulation (GDPR) (EU) 2016/679. Spotware reserves the right to restrict or remove access to applications which are found to be in breach of GDPR and privacy-specific obligations and terms. Use of Application Contact Details \u00b6 As part of the use of the API, Spotware is required to have limited personal contact details of designated personnel of the developer and / or his team, comprising first and last names, the person\u2019s employer\u2019s name, email address and a telephone number. These mandatory details are a condition of using the Open API and shall be made available in the cBroker platform to Brokers (not traders) for the purposes of requesting support, if necessary. The personal data shall be retained for as long as the Open API is used by the application, and shall be removed after a maximum of 6 months following termination of such use. Publicity \u00b6 Spotware Systems Ltd reserves the right to refer to you as a user of Spotware Connect API.","title":"Terms of Use"},{"location":"terms-of-use/#terms-of-use","text":"You can find the terms of use of Spotware Open API here. To start using the API, just apply for your own Partner's Credentials (OAuth Public Client ID and Client Secret). For more details check the Open Authentication section of this guide.","title":"Terms of Use"},{"location":"terms-of-use/#acceptance-of-terms-of-use","text":"By registering an application and by using Spotware Connect API, you confirm that you have read, understood and agree to these terms of use.","title":"Acceptance of Terms of Use"},{"location":"terms-of-use/#api-license","text":"As long as you adhere to the terms of use, we grant you a limited, non-exclusive, non-assignable, non-transferable license under Spotware\u2019s intellectual property rights to use the APIs to develop, test, and support your Application, and to let your customers use your integration of the APIs within your Application.","title":"API License"},{"location":"terms-of-use/#cost","text":"Spotware Connect API is offered for free. Nevertheless, Spotware Systems Ltd reserves the right to change the pricing policy without prior notice and without your consent.","title":"Cost"},{"location":"terms-of-use/#limitation-of-liability","text":"The API is provided \u201cas is\u201d. It is your sole responsibility to test the API and decide if it is appropriate for your business needs. Spotware Systems Ltd does not make any promises nor does it provide any guarantee regarding the performance, reliability and availability of the API. In no event shall Spotware Systems Ltd be liable for any damages (including, without limitation, lost profits, business interruption, or lost information) arising out of use of or inability to use the API, even if Spotware Systems Ltd has been advised of the possibility of such damages. In no event will Spotware Systems Ltd be liable for loss of data or for indirect, special, incidental, consequential (including lost profit), or other damages based on contract, tort or otherwise. Spotware Systems Ltd shall have no liability with respect to the content of Spotware Systems products or any part thereof, including but not limited to errors or omissions contained therein, libel, infringements of rights of publicity, privacy, trademark rights, business interruption, personal injury, loss of privacy, moral rights or the disclosure of confidential information.","title":"Limitation of Liability"},{"location":"terms-of-use/#modification","text":"Spotware Systems Ltd reserves the right to modify the API and the terms of use at any time without prior notice and without any liability.","title":"Modification"},{"location":"terms-of-use/#fair-use","text":"","title":"Fair Use"},{"location":"terms-of-use/#resources","text":"You agree to use the API and the resources provided by Spotware Systems Ltd in a fair and sensible manner. You should take all the measures required on your side to avoid unreasonable use of APIs resources. In case of misuse of the API, Spotware Systems Ltd reserves the right to restrict or remove access to your application.","title":"Resources"},{"location":"terms-of-use/#user-data","text":"By using the API you can gain access to sensitive user information. You may not use, store, distribute or process traders\u2019 personal information in any way other than to fulfill the specific trading objectives which your application has been built to serve. In addition, any processing of traders\u2019 personal information must have the explicit prior approval from the traders and a valid legal basis for the intended processing. Finally, you should not provide or embed in the application functionality that results in the execution of trading actions on behalf of the trader, without his / her explicit prior approval. Also by using Connect API, you acknowledge that you operate in accordance with General Data Protection Regulation (GDPR) (EU) 2016/679. Spotware reserves the right to restrict or remove access to applications which are found to be in breach of GDPR and privacy-specific obligations and terms.","title":"User Data"},{"location":"terms-of-use/#use-of-application-contact-details","text":"As part of the use of the API, Spotware is required to have limited personal contact details of designated personnel of the developer and / or his team, comprising first and last names, the person\u2019s employer\u2019s name, email address and a telephone number. These mandatory details are a condition of using the Open API and shall be made available in the cBroker platform to Brokers (not traders) for the purposes of requesting support, if necessary. The personal data shall be retained for as long as the Open API is used by the application, and shall be removed after a maximum of 6 months following termination of such use.","title":"Use of Application Contact Details"},{"location":"terms-of-use/#publicity","text":"Spotware Systems Ltd reserves the right to refer to you as a user of Spotware Connect API.","title":"Publicity"}]}